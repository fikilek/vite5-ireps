{"version":3,"file":"IwAstsOnErf-rI1zQBzW.js","sources":["../../src/components/tables/TableAstsOnErf.jsx","../../src/components/irepsInfoWindow/IwAstsOnErf.jsx"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport \"@/components/tables/Table.css\";\r\nimport \"@/components/tables/TableAstsOnErf.css\";\r\n\r\nimport { TableCustomNoRowsOverlay } from \"@/components/tables/TableCustomNoRowsOverlay\";\r\n\r\n// ag grid\r\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\r\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport \"@ag-grid-community/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\r\nModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n\r\nconst TableAstsOnErf = (props) => {\r\n\t// console.log(`TableAstsOnErf props`, props);\r\n\tconst { rowData, colDefs } = props;\r\n\r\n\tconst defaultColDef = useMemo(\r\n\t\t() => ({\r\n\t\t\tsortable: true,\r\n\t\t\tfilter: true,\r\n\t\t\tresizable: true,\r\n\t\t\tfloatingFilter: true,\r\n\t\t\tsuppressMovable: true,\r\n\t\t\t// flex: 1,\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst getRowId = (params) => {\r\n\t\t// console.log(`params`, params);\r\n\t\treturn params.data.id;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"ag-theme-quartz table table-erfs table-asts-on-erf\">\r\n\t\t\t<AgGridReact\r\n\t\t\t\trowData={rowData}\r\n\t\t\t\tcolumnDefs={colDefs}\r\n\t\t\t\tdefaultColDef={defaultColDef}\r\n\t\t\t\tpagination={true}\r\n\t\t\t\tnoRowsOverlayComponent={TableCustomNoRowsOverlay}\r\n\t\t\t\tgetRowId={getRowId}\r\n\t\t\t\treactiveCustomComponents\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableAstsOnErf;\r\n","// css\nimport \"@/components/irepsInfoWindow/IwAstsOnErf.css\";\n\n// hooks\nimport useModal from \"@/hooks/useModal.jsx\";\n\n// component\nimport TableAstsOnErf from \"@/components/tables/TableAstsOnErf\";\nimport TableDate from \"@/components/tables/TableDate\";\nimport IrepsInfoWindow from \"./IrepsInfoWindow\";\nimport { irepsConstants } from \"@/utils/utils\";\n// import TableModalBtn from \"@/components/tables/TableModalBtn\";\n\nconst IwAstsOnErf = (props) => {\n\t// console.log(`props`, props);\n\n\tconst { asts, erfNo, id, address } = props.data.data;\n\t// console.log(`asts`, asts);\n\n\tconst { openModal } = useModal();\n\n\tconst astsOnErfTableFields = [\n\t\t// {\n\t\t// \tfield: \"astCat\",\n\t\t// \theaderName: \"Ast Category\",\n\t\t// \twidth: 100,\n\t\t// },\n\t\t{\n\t\t\tfield: \"createdByUser\",\n\t\t\theaderName: \"Created By\",\n\t\t\t// width: 150,\n\t\t\tflex: 0.2,\n\t\t},\n\t\t{\n\t\t\tfield: \"createdAtDatetime\",\n\t\t\theaderName: \"Created At Datetime\",\n\t\t\tcellRenderer: (params) => {\n\t\t\t\t// console.log(`params`, params);\n\t\t\t\tconst newDate = params.value.toDate();\n\t\t\t\treturn (\n\t\t\t\t\t<TableDate\n\t\t\t\t\t\tdate={newDate}\n\t\t\t\t\t\tdateFormat={irepsConstants.IC_DATE_FORMAT1}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t\tvalueGetter: (params) => {\n\t\t\t\treturn params.data.createdAtDatetime;\n\t\t\t},\n\t\t\t// width: 180,\n\t\t\tflex: 0.3,\n\t\t},\n\t\t{\n\t\t\tfield: \"astNo\",\n\t\t\theaderName: \"Ast No\",\n\t\t\t// width: 150,\n\t\t\tflex: 0.2,\n\t\t},\n\t\t{\n\t\t\tfield: \"astCreatorTrnName\",\n\t\t\theaderName: \"Creater\",\n\t\t\tflex: 0.2,\n\t\t},\n\t\t// {\n\t\t// \tfield: \"\",\n\t\t// \theaderName: \"Ast Trns\",\n\t\t// \tcellRenderer: params => {\n\t\t// \t\t// console.log(`props`, props);\n\t\t// \t\treturn <TableModalBtn data={params}>Possible Trns</TableModalBtn>;\n\t\t// \t},\n\t\t// \tcellRendererParams: {\n\t\t// \t\tmodalName: \"iwPossibleAstTrnsOnAst\",\n\t\t// \t\twidth: \"6rem\",\n\t\t// \t},\n\t\t// },\n\t];\n\n\tconst handlePossibleTrns = () => {\n\t\t// console.log(`open Possible trns modal - e : `, e);\n\t\topenModal({\n\t\t\tmodalName: \"possibleAstTrnsOnErf\",\n\t\t\tpayload: {\n\t\t\t\terfNo,\n\t\t\t\terfId: id,\n\t\t\t\taddress,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"iw-asts-on-erf\">\n\t\t\t<IrepsInfoWindow\n\t\t\t\thl1={\"Asts On Erf\"}\n\t\t\t\thl3={<span>Erf No: {erfNo}</span>}\n\t\t\t\thr1={<button onClick={handlePossibleTrns}>Trn</button>}\n\t\t\t\thr2={<span>Total Asts: {asts?.length}</span>}\n\t\t\t\twindowWidth=\"60rem\"\n\t\t\t\twindowHeight=\"35rem\"\n\t\t\t\theaderType=\"headerType3\"\n\t\t\t>\n\t\t\t\t<TableAstsOnErf rowData={asts} colDefs={astsOnErfTableFields} />\n\t\t\t</IrepsInfoWindow>\n\t\t</div>\n\t);\n};\n\nexport default IwAstsOnErf;\n"],"names":["ModuleRegistry","ClientSideRowModelModule","TableAstsOnErf","props","rowData","colDefs","defaultColDef","useMemo","getRowId","params","jsx","AgGridReact","TableCustomNoRowsOverlay","IwAstsOnErf","asts","erfNo","id","address","openModal","useModal","astsOnErfTableFields","newDate","TableDate","irepsConstants","handlePossibleTrns","IrepsInfoWindow"],"mappings":"kgBAaAA,EAAe,gBAAgB,CAACC,CAAwB,CAAC,EAEzD,MAAMC,EAAkBC,GAAU,CAE3B,KAAA,CAAE,QAAAC,EAAS,QAAAC,CAAY,EAAAF,EAEvBG,EAAgBC,EAAA,QACrB,KAAO,CACN,SAAU,GACV,OAAQ,GACR,UAAW,GACX,eAAgB,GAChB,gBAAiB,EAAA,GAGlB,CAAC,CAAA,EAGIC,EAAYC,GAEVA,EAAO,KAAK,GAInB,OAAAC,EAAAA,IAAC,MAAI,CAAA,UAAU,qDACd,SAAAA,EAAA,IAACC,EAAA,CACA,QAAAP,EACA,WAAYC,EACZ,cAAAC,EACA,WAAY,GACZ,uBAAwBM,EACxB,SAAAJ,EACA,yBAAwB,EAAA,CAE1B,CAAA,CAAA,CAEF,ECpCMK,EAAeV,GAAU,CAG9B,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,GAAAC,EAAI,QAAAC,CAAQ,EAAId,EAAM,KAAK,KAG1C,CAAE,UAAAe,GAAcC,IAEhBC,EAAuB,CAM5B,CACC,MAAO,gBACP,WAAY,aAEZ,KAAM,EACP,EACA,CACC,MAAO,oBACP,WAAY,sBACZ,aAAeX,GAAW,CAEnB,MAAAY,EAAUZ,EAAO,MAAM,OAAO,EAEnC,OAAAC,EAAA,IAACY,EAAA,CACA,KAAMD,EACN,WAAYE,EAAe,eAAA,CAAA,CAG9B,EACA,YAAcd,GACNA,EAAO,KAAK,kBAGpB,KAAM,EACP,EACA,CACC,MAAO,QACP,WAAY,SAEZ,KAAM,EACP,EACA,CACC,MAAO,oBACP,WAAY,UACZ,KAAM,EACP,CAAA,EAeKe,EAAqB,IAAM,CAEtBN,EAAA,CACT,UAAW,uBACX,QAAS,CACR,MAAAH,EACA,MAAOC,EACP,QAAAC,CACD,CAAA,CACA,CAAA,EAID,OAAAP,EAAAA,IAAC,MAAI,CAAA,UAAU,iBACd,SAAAA,EAAA,IAACe,EAAA,CACA,IAAK,cACL,WAAM,OAAK,CAAA,SAAA,CAAA,WAASV,CAAA,EAAM,EAC1B,IAAKL,EAAA,IAAC,SAAO,CAAA,QAASc,EAAoB,SAAG,MAAA,EAC7C,WAAM,OAAK,CAAA,SAAA,CAAA,eAAaV,GAAA,YAAAA,EAAM,MAAA,EAAO,EACrC,YAAY,QACZ,aAAa,QACb,WAAW,cAEX,SAACJ,EAAA,IAAAR,EAAA,CAAe,QAASY,EAAM,QAASM,EAAsB,CAAA,CAEhE,CAAA,CAAA,CAEF"}