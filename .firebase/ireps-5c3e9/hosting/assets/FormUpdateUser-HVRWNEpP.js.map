{"version":3,"file":"FormUpdateUser-HVRWNEpP.js","sources":["../../src/components/forms/auth/FormUpdateUser.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\r\nimport { object, string } from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useEffect } from \"react\";\r\n\r\n// css\r\nimport \"@/components/forms/Form.css\";\r\n\r\n// custom hooks\r\nimport useModal from \"@/hooks/useModal.jsx\";\r\nimport { useFirebase } from \"@/hooks/useFirebase.jsx\";\r\nimport { useSignup } from \"@/hooks/useSignup.jsx\";\r\nimport { useServiceProviders } from \"@/hooks/useServiceProviders.jsx\";\r\n\r\nimport FormikControl from \"@/components/forms/formik/FormikControl\";\r\nimport FormFooter from \"@/components/forms/formFooter/FormFooter\";\r\nimport FormMsg from \"@/components/forms/formMsg/FormMsg\";\r\nimport FormError from \"@/components/forms/formError/FormError\";\r\nimport { capitalizeFirstLetters } from \"@/utils/utils\";\r\nimport FormCloseBtn from \"../formBtns/FormCloseBtn\";\r\nimport HeaderGeneric from \"@/components/header/HeaderGeneric\";\r\n\r\nconst UpdateUser = (props) => {\r\n\t// console.log(`props`, props)\r\n\tconst { surname, name, nickName, companyName, workbase } = props.formData;\r\n\r\n\tconst {\r\n\t\tserviceProviders,\r\n\t\tgetSpClients,\r\n\t\tgetSpDetailsFromSpName,\r\n\t\tgetSpClientsFromName,\r\n\t} = useServiceProviders();\r\n\r\n\tconst { getCustomError } = useFirebase();\r\n\r\n\tconst { updateUser, signupState } = useSignup();\r\n\r\n\tconst { closeModal } = useModal();\r\n\r\n\tconst onSubmit = (values) => {\r\n\t\t// console.log(`Form values`, values);\r\n\t\tconst newValues = capitalizeFirstLetters(values);\r\n\t\t// console.log(`Form newValues`, newValues);\r\n\t\tupdateUser(newValues);\r\n\t};\r\n\r\n\tconst validationSchema = object({\r\n\t\tsurname: string().required(\"Surname is required.\"),\r\n\t\tname: string().required(\"required.\"),\r\n\t\t// nickName: string().required(\"required.\"),\r\n\t\t// companyName: string().ensure().required(\"Company name is required.\"),\r\n\t\tworkbase: string().required(\"Workbase is required\"),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (signupState.success) {\r\n\t\t\tcloseModal();\r\n\t\t\ttoast.success(`User \"${surname} ${name}\" succesfully updated on iREPS`, {\r\n\t\t\t\tposition: \"bottom-left\",\r\n\t\t\t});\r\n\t\t}\r\n\t}, [signupState.success, closeModal, surname, name]);\r\n\r\n\treturn (\r\n\t\t<div className=\"form-wrapper\">\r\n\t\t\t<div className=\"form-container update-user\">\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tsurname,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t// nickName,\r\n\t\t\t\t\t\t// companyName,\r\n\t\t\t\t\t\tworkbase,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t>\r\n\t\t\t\t\t{(formik) => {\r\n\t\t\t\t\t\t// console.log(`formik`, formik);\r\n\r\n\t\t\t\t\t\t// This will use regular ecpresion to search for matching companyName form list of all service providers\r\n\t\t\t\t\t\tconst sp = getSpDetailsFromSpName(formik.values.companyName);\r\n\t\t\t\t\t\t// console.log(`sp`, sp);\r\n\r\n\t\t\t\t\t\tlet spClients = getSpClients(sp);\r\n\r\n\t\t\t\t\t\tconst result = spClients.find((client) => {\r\n\t\t\t\t\t\t\tconst clientStr = client.key.toLowerCase().trim();\r\n\t\t\t\t\t\t\t// console.log(`clientStr`, clientStr);\r\n\r\n\t\t\t\t\t\t\t// user regular expresions to search doe a matching nameStr in spStr\r\n\t\t\t\t\t\t\tconst re = new RegExp(\"rste\", \"gi\");\r\n\t\t\t\t\t\t\t// console.log(`re`, re);\r\n\r\n\t\t\t\t\t\t\treturn re.test(clientStr);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// console.log(`result`, result);\r\n\r\n\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\t// const sp = getSpDetails(\"rste\");\r\n\t\t\t\t\t\t\tspClients = getSpClientsFromName(\"rste\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log(`spClients`, spClients);\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<HeaderGeneric hl1=\"Update User Info\" hr1={<p></p>}>\r\n\t\t\t\t\t\t\t\t\t\t<FormCloseBtn />\r\n\t\t\t\t\t\t\t\t\t</HeaderGeneric>\r\n\t\t\t\t\t\t\t\t\t<FormMsg msg=\"Complete the fields below and submit to update user info on iREPS.\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"updateuser-form\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div className=\"row-50-50\"> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Surname\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"surname\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"name\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div className=\"row-50-50\"> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <FormikControl\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Aka\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"nickName\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <FormikControl\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"companyName\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={serviceProviders.spOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{signupState.error && (\r\n\t\t\t\t\t\t\t\t\t\t<FormError errorMsg={getCustomError(signupState.error)} />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<FormFooter formik={formik} signState={signupState} />\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpdateUser;\r\n"],"names":["UpdateUser","props","surname","name","nickName","companyName","workbase","serviceProviders","getSpClients","getSpDetailsFromSpName","getSpClientsFromName","useServiceProviders","getCustomError","useFirebase","updateUser","signupState","useSignup","closeModal","useModal","onSubmit","values","newValues","capitalizeFirstLetters","validationSchema","object","string","useEffect","toast","jsx","Formik","formik","sp","spClients","client","clientStr","Fragment","Form","HeaderGeneric","FormCloseBtn","FormMsg","jsxs","FormikControl","FormError","FormFooter"],"mappings":"0hBAsBM,MAAAA,EAAcC,GAAU,CAE7B,KAAM,CAAE,QAAAC,EAAS,KAAAC,EAAM,SAAAC,EAAU,YAAAC,EAAa,SAAAC,GAAaL,EAAM,SAE3D,CACL,iBAAAM,EACA,aAAAC,EACA,uBAAAC,EACA,qBAAAC,GACGC,EAAoB,EAElB,CAAE,eAAAC,GAAmBC,IAErB,CAAE,WAAAC,EAAY,YAAAC,CAAY,EAAIC,EAAU,EAExC,CAAE,WAAAC,GAAeC,IAEjBC,EAAYC,GAAW,CAEtB,MAAAC,EAAYC,EAAuBF,CAAM,EAE/CN,EAAWO,CAAS,CAAA,EAGfE,EAAmBC,EAAO,CAC/B,QAASC,EAAA,EAAS,SAAS,sBAAsB,EACjD,KAAMA,EAAA,EAAS,SAAS,WAAW,EAGnC,SAAUA,EAAA,EAAS,SAAS,sBAAsB,CAAA,CAClD,EAEDC,OAAAA,EAAAA,UAAU,IAAM,CACXX,EAAY,UACJE,IACXU,EAAM,QAAQ,SAASzB,CAAO,IAAIC,CAAI,iCAAkC,CACvE,SAAU,aAAA,CACV,EACF,EACE,CAACY,EAAY,QAASE,EAAYf,EAASC,CAAI,CAAC,QAGjD,MAAI,CAAA,UAAU,eACd,SAACyB,EAAA,IAAA,MAAA,CAAI,UAAU,6BACd,SAAAA,EAAA,IAACC,EAAA,CACA,cAAe,CACd,QAAA3B,EACA,KAAAC,EAGA,SAAAG,CACD,EACA,SAAAa,EACA,iBAAAI,EAEC,SAACO,GAAW,CAIZ,MAAMC,EAAKtB,EAAuBqB,EAAO,OAAO,WAAW,EAGvD,IAAAE,EAAYxB,EAAauB,CAAE,EAc/B,OAZeC,EAAU,KAAMC,GAAW,CACzC,MAAMC,EAAYD,EAAO,IAAI,cAAc,KAAK,EAOzC,OAHI,IAAI,OAAO,OAAQ,IAAI,EAGxB,KAAKC,CAAS,CAAA,CACxB,IAKAF,EAAYtB,EAAqB,MAAM,GAKvCkB,EAAAA,IAAAO,EAAAA,SAAA,CACC,gBAACC,EACA,CAAA,SAAA,CAACR,EAAAA,IAAAS,EAAA,CAAc,IAAI,mBAAmB,UAAM,IAAE,CAAA,CAAA,EAC7C,SAACT,EAAAA,IAAAU,EAAA,CAAA,CAAa,CACf,CAAA,EACAV,EAAAA,IAACW,EAAQ,CAAA,IAAI,oEAAqE,CAAA,QACjF,MAAI,CAAA,UAAU,kBACd,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,WAEd,SAAA,CAAAZ,EAAA,IAACa,EAAA,CACA,QAAQ,QACR,KAAK,OACL,MAAM,UACN,KAAM,UACN,YAAY,GACZ,UAAW,EAAA,CACZ,EACAb,EAAA,IAACa,EAAA,CACA,QAAQ,QACR,KAAK,OACL,MAAM,OACN,KAAM,OACN,YAAY,EAAA,CACb,CAAA,CAAA,CAmBD,CACD,CAAA,EACC1B,EAAY,OACXa,EAAA,IAAAc,EAAA,CAAU,SAAU9B,EAAeG,EAAY,KAAK,EAAG,EAExDa,EAAAA,IAAAe,EAAA,CAAW,OAAAb,EAAgB,UAAWf,CAAa,CAAA,CAAA,CACrD,CAAA,CACD,CAAA,CAEF,CAAA,CAAA,CAEF,CAAA,CACD,CAAA,CAEF"}