{"version":3,"file":"Erfs-BzryvLI2.js","sources":["../../src/components/tables/TableErfs.jsx","../../src/components/erfs/ErfsTable.jsx","../../src/components/erfs/ErfsMain.jsx","../../src/components/erfs/ErfsHeader.jsx","../../src/pages/erfs/Erfs.jsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { AgGridReact } from \"@ag-grid-community/react\";\n\n// css\nimport \"@/components/tables/Table.css\";\nimport \"@/components/tables/TableErfs.css\";\nimport \"@ag-grid-community/styles/ag-grid.css\";\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nModuleRegistry.registerModules([ClientSideRowModelModule]);\n\n// components\nimport { TableCustomNoRowsOverlay } from \"@/components/tables/TableCustomNoRowsOverlay\";\n\nconst TableErfs = (props) => {\n\tconst { rowData, colDefs } = props;\n\n\tconst defaultColDef = useMemo(\n\t\t() => ({\n\t\t\tsortable: true,\n\t\t\tfilter: true,\n\t\t\tresizable: true,\n\t\t\tfloatingFilter: true,\n\t\t\tsuppressMovable: true,\n\t\t}),\n\t\t[]\n\t);\n\n\tconst getRowId = (params) => {\n\t\t// console.log(`params`, params);\n\t\treturn params.data.id;\n\t};\n\n\t// const rowClassRules = {\n\t// \t\"row-disabled\": params => {\n\t// \t\t// console.log(`params?.data?.disabled`, params?.data?.disabled);\n\t// \t\treturn params?.data?.disabled;\n\t// \t},\n\t// };\n\n\treturn (\n\t\t<div className=\"ag-theme-quartz table table-erfs\">\n\t\t\t<AgGridReact\n\t\t\t\trowData={rowData}\n\t\t\t\tcolumnDefs={colDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\tpagination={true}\n\t\t\t\tnoRowsOverlayComponent={TableCustomNoRowsOverlay}\n\t\t\t\tgetRowId={getRowId}\n\t\t\t\t// rowClassRules={rowClassRules}\n\t\t\t\treactiveCustomComponents\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default TableErfs;\n","import { useContext } from \"react\";\n\n// css\nimport \"@/components/erfs/ErfsTable.css\";\n\n// contexts\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\n\n// components\nimport TableErfs from \"@/components/tables/TableErfs\";\n\nconst ErfsTable = () => {\n\tconst { erfsContext } = useContext(ErfsContext);\n\t// console.log(`erfsContext`, erfsContext);\n\treturn (\n\t\t<div className=\"erfs-table\">\n\t\t\t<TableErfs rowData={erfsContext.erfs} colDefs={erfsContext.erfsTableFields} />\n\t\t</div>\n\t);\n};\n\nexport default ErfsTable;\n","import { useContext } from \"react\";\n\n// css\nimport \"@/components/erfs/ErfsMain.css\";\n\n// context\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\n\n// components\nimport ErfsTable from \"@/components/erfs/ErfsTable\";\n// import RgmErfsMap from \"@/components/maps/rgm/RgmErfsMap\";\n// import ErfsMap from \"./ErfsMap\";\n\nconst ErfsMain = () => {\n\tconst { erfsContext } = useContext(ErfsContext);\n\t// console.log(`erfsContext`, erfsContext);\n\n\t// const isThereErfs = erfsContext.erfs.length\n\t// console.log(`isThereErfs`, isThereErfs)\n\n\treturn (\n\t\t<div className=\"erfs-main\">\n\t\t\t{erfsContext.activeTab === \"table\" && <ErfsTable />}\n\t\t\t{/* {erfsContext.activeTab === \"map\" && <ErfsMap />} */}\n\t\t</div>\n\t);\n};\n\nexport default ErfsMain;\n","import { useCallback, useContext } from \"react\";\r\n\r\n// css\r\nimport \"@/components/erfs/ErfsHeader.css\";\r\n\r\n// hooks\r\nimport { useUser } from \"@/hooks/useUser\";\r\nimport useAuthContext from \"@/hooks/useAuthContext\";\r\n\r\n// components\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\nimport PageTitle from \"@/pages/PageTitle\";\r\n// import FilterBtn from \"@/components/filters/FilterBtn\";\r\nimport BtnPageHeaderBtn from \"@/components/buttons/BtnPageHeaderBtn\";\r\n\r\nconst ErfsHeader = (props) => {\r\n\t// props\r\n\tconst { phLl } = props;\r\n\r\n\tconst { user } = useAuthContext();\r\n\t// console.log(`user`, user);\r\n\r\n\tconst { userFromUsers } = useUser(user?.uid);\r\n\t// console.log(`userFromUsers`, userFromUsers);\r\n\r\n\t// context\r\n\tconst { setErfsContext } = useContext(ErfsContext);\r\n\r\n\t// handle event - active tab\r\n\tconst handleActiveTab = useCallback(\r\n\t\t(e) => {\r\n\t\t\t// console.log(`e.target.id`, e.target.id);\r\n\t\t\tsetErfsContext((prev) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tactiveTab: e.target.id,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setErfsContext]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"erfs-header\">\r\n\t\t\t<div className=\"ph ph-left\">\r\n\t\t\t\t<div className=\"phLl\">\r\n\t\t\t\t\t{/* <FilterBtn /> */}\r\n\t\t\t\t\t<PageTitle title={phLl} />\r\n\t\t\t\t\t<PageTitle title={userFromUsers.workbase} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"ph ph-right\">\r\n\t\t\t\t<div className=\"phRl\"></div>\r\n\t\t\t\t<div className=\"phRr\">\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"table\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"split\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"map\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErfsHeader;\r\n","// css\r\nimport \"@/pages/erfs/Erfs.css\";\r\n\r\n// hooks\r\nimport { useErfs } from \"@/hooks/useErfs.jsx\";\r\nimport { useAsts } from \"@/hooks/useAsts.jsx\";\r\n\r\n// components\r\nimport ErfsMain from \"@/components/erfs/ErfsMain\";\r\nimport ErfsHeader from \"@/components/erfs/ErfsHeader\";\r\n\r\nconst Erfs = () => {\r\n\tuseErfs();\r\n\tuseAsts();\r\n\r\n\treturn (\r\n\t\t<div className=\"erfs\">\r\n\t\t\t<ErfsHeader phLl=\"Erfs\" />\r\n\t\t\t<div className=\"erfs-body\">\r\n\t\t\t\t<ErfsMain />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Erfs;\r\n"],"names":["ModuleRegistry","ClientSideRowModelModule","TableErfs","props","rowData","colDefs","defaultColDef","useMemo","getRowId","params","jsx","AgGridReact","TableCustomNoRowsOverlay","ErfsTable","erfsContext","useContext","ErfsContext","ErfsMain","ErfsHeader","phLl","user","useAuthContext","userFromUsers","useUser","setErfsContext","useCallback","e","prev","jsxs","PageTitle","Erfs","useErfs","useAsts"],"mappings":"knBAUAA,EAAe,gBAAgB,CAACC,CAAwB,CAAC,EAKzD,MAAMC,EAAaC,GAAU,CACtB,KAAA,CAAE,QAAAC,EAAS,QAAAC,CAAY,EAAAF,EAEvBG,EAAgBC,EAAA,QACrB,KAAO,CACN,SAAU,GACV,OAAQ,GACR,UAAW,GACX,eAAgB,GAChB,gBAAiB,EAAA,GAElB,CAAC,CAAA,EAGIC,EAAYC,GAEVA,EAAO,KAAK,GAWnB,OAAAC,EAAAA,IAAC,MAAI,CAAA,UAAU,mCACd,SAAAA,EAAA,IAACC,EAAA,CACA,QAAAP,EACA,WAAYC,EACZ,cAAAC,EACA,WAAY,GACZ,uBAAwBM,EACxB,SAAAJ,EAEA,yBAAwB,EAAA,CAE1B,CAAA,CAAA,CAEF,EC5CMK,EAAY,IAAM,CACvB,KAAM,CAAE,YAAAC,CAAA,EAAgBC,EAAA,WAAWC,CAAW,EAE9C,OACEN,EAAAA,IAAA,MAAA,CAAI,UAAU,aACd,SAACA,EAAAA,IAAAR,EAAA,CAAU,QAASY,EAAY,KAAM,QAASA,EAAY,eAAA,CAAiB,CAC7E,CAAA,CAEF,ECNMG,EAAW,IAAM,CACtB,KAAM,CAAE,YAAAH,CAAA,EAAgBC,EAAA,WAAWC,CAAW,EAO7C,OAAAN,EAAA,IAAC,OAAI,UAAU,YACb,WAAY,YAAc,SAAYA,EAAA,IAAAG,EAAA,CAAU,CAAA,CAElD,CAAA,CAEF,ECXMK,EAAcf,GAAU,CAEvB,KAAA,CAAE,KAAAgB,CAAS,EAAAhB,EAEX,CAAE,KAAAiB,GAASC,IAGX,CAAE,cAAAC,CAAkB,EAAAC,EAAQH,GAAA,YAAAA,EAAM,GAAG,EAIrC,CAAE,eAAAI,CAAA,EAAmBT,EAAA,WAAWC,CAAW,EAGzBS,OAAAA,EAAA,YACtBC,GAAM,CAENF,EAAgBG,IACR,CACN,GAAGA,EACH,UAAWD,EAAE,OAAO,EAAA,EAErB,CACF,EACA,CAACF,CAAc,CAChB,EAGCI,EAAA,KAAC,MAAI,CAAA,UAAU,cACd,SAAA,CAAAlB,EAAAA,IAAC,OAAI,UAAU,aACd,SAACkB,EAAA,KAAA,MAAA,CAAI,UAAU,OAEd,SAAA,CAAClB,EAAAA,IAAAmB,EAAA,CAAU,MAAOV,CAAM,CAAA,EACvBT,EAAAA,IAAAmB,EAAA,CAAU,MAAOP,EAAc,QAAU,CAAA,CAAA,CAAA,CAC3C,CACD,CAAA,EAEAM,EAAAA,KAAC,MAAI,CAAA,UAAU,cACd,SAAA,CAAClB,EAAAA,IAAA,MAAA,CAAI,UAAU,MAAO,CAAA,EACtBA,EAAAA,IAAC,MAAI,CAAA,UAAU,MAaf,CAAA,CAAA,EACD,CACD,CAAA,CAAA,CAEF,EC5DMoB,EAAO,KACJC,IACAC,IAGPJ,EAAA,KAAC,MAAI,CAAA,UAAU,OACd,SAAA,CAAClB,EAAAA,IAAAQ,EAAA,CAAW,KAAK,MAAO,CAAA,QACvB,MAAI,CAAA,UAAU,YACd,SAAAR,MAACO,GAAS,CAAA,EACX,CACD,CAAA,CAAA"}