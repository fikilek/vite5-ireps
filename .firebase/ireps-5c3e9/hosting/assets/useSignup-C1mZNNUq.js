import{r as C,u as D,bi as P,a4 as n,bj as N,bk as f,a8 as R,bl as E,aa as y,d as w,k as b,bm as B,az as g,bn as I,bo as k,bp as _}from"./index-Ckqn-BEY.js";try{let s=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},e=new s.Error().stack;e&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[e]="bb0660cd-f37b-4cc5-9fcd-2587c7199d75",s._sentryDebugIdIdentifier="sentry-dbid-bb0660cd-f37b-4cc5-9fcd-2587c7199d75")}catch{}const T={error:null,isPending:null,success:null,otpSent:!1,otpSentConformation:null,user:null},W=(s,e)=>{switch(e.type){case"IS_PENDING":return{...s,error:"",isPending:!0,success:!1};case"OTP_SENT":return{...s,otpSent:!0,otpSentConformation:e.payload};case"SUCCESS":return{...s,error:"",isPending:!1,success:!0};case"ERROR":return{...s,error:e.payload,isPending:!1,success:!1};case"SAVE_USER":return{...s,user:e.payload};default:return s}},z=()=>{const[s,e]=C.useReducer(W,T),{user:d,dispatch:U}=D();return{signup:async o=>{const{surname:t,name:a,password:r,email:l,phoneNumber:p,workbase:u}=o;try{e({type:"IS_PENDING"});const i=await P(n,l,r);if(!i)throw new Error("User signup failed");const{user:c}=i,m=await n.currentUser.getIdTokenResult(!0);await N(c),await f(n.currentUser,{displayName:`${a} ${t}`});const V=await(await R(E,"updateUserWorkbase"))({roles:{workbase:u}});U({type:"SIGNIN",payload:{...c,claims:m.claims.roles}});const h=y(w,"users",c.uid),S=b.now();await B(h,{surname:t,name:a,email:l,phoneNumber:p,workbase:u,metadata:{createdByName:`${t} ${a}`,createdByUid:c.uid,createdAtDatetime:S,updatedByName:`${t} ${a}`,updatedByUid:c.uid,updatedAtDatetime:S}}),e({type:"SUCCESS"})}catch(i){e({type:"ERROR",payload:i.message}),console.log("signup err",i.message)}},updateUser:async o=>{const{surname:t,name:a,nickName:r,companyName:l,workbase:p}=o;try{e({type:"IS_PENDING"}),await f(n.currentUser,{displayName:`${a} ${t}`});const u=y(w,"users",d.uid),i=b.now();await g(u,{"metadata.updatedByName":`${t} ${a}`,"metadata.updatedByUid":d.uid,"metadata.updatedAtDatetime":i,name:a,surname:t,workbase:p}),U({type:"SIGNIN",payload:d}),e({type:"SUCCESS"})}catch(u){e({type:"ERROR",payload:u.message}),console.log("updateUser err",u.message)}},updateUserEmail:async o=>{const{newEmail:t,password:a}=o;try{e({type:"IS_PENDING"});const r=I.credential(n.currentUser.email,a),l=await k(n.currentUser,r),p=await n.currentUser.getIdTokenResult(!0),u=await _(n.currentUser,t),i=await N(n.currentUser),c=y(w,"users",d.uid),m=b.now();await g(c,{"metadata.updatedByName":d.displayName,"metadata.updatedByUid":d.uid,"metadata.updatedAtDatetime":m,email:t}),U({type:"SIGNIN",payload:{...d,claims:p.claims.roles}}),e({type:"SUCCESS"})}catch(r){e({type:"ERROR",payload:r.message}),console.log("signup err",r.message)}},updateUserWorkbase:async o=>{const{newWorkbase:t,password:a}=o;try{e({type:"IS_PENDING"});const r=I.credential(n.currentUser.email,a),l=await k(n.currentUser,r),p=await n.currentUser.getIdTokenResult(!0),i=await R(E,"updateUserWorkbase")({roles:{workbase:t}}),c=y(w,"users",d.uid),m=b.now();await g(c,{"metadata.updatedByName":d.displayName,"metadata.updatedByUid":d.uid,"metadata.updatedAtDatetime":m,workbase:t}),U({type:"SIGNIN",payload:{...d,claims:p.claims.roles}}),e({type:"SUCCESS"})}catch(r){e({type:"ERROR",payload:r.message}),console.log("signup err",r.message)}},signupState:s,updateUserObject:async(o,t)=>{try{e({type:"IS_PENDING"});const a=y(w,"users",t),r=b.now();await g(a,{"metadata.updatedByName":`${d.displayName}`,"metadata.updatedByUid":d.uid,"metadata.updatedAtDatetime":r,workbases:o.workbases}),e({type:"SUCCESS"})}catch(a){e({type:"ERROR",payload:a.message}),console.log("updateUser err",a.message)}}}};export{z as u};
//# sourceMappingURL=useSignup-C1mZNNUq.js.map
