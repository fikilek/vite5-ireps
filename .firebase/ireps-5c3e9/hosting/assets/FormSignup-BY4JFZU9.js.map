{"version":3,"file":"FormSignup-BY4JFZU9.js","sources":["../../src/components/forms/auth/FormSignup.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\nimport { object, ref, string } from \"yup\";\nimport { CiLogin } from \"react-icons/ci\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\n// css\nimport \"@/components/forms/Form.css\";\n\n// custom hooks\nimport { useSignup } from \"@/hooks/useSignup.jsx\";\nimport useModal from \"@/hooks/useModal.jsx\";\n// import { useServiceProviders } from \"@/hooks/useServiceProviders.jsx\";\nimport { useFirebase } from \"@/hooks/useFirebase.jsx\";\n\n// context\nimport useAuthContext from \"@/hooks/useAuthContext.jsx\";\n\n// other components\nimport FormikControl from \"@/components/forms/formik/FormikControl\";\nimport FormFooter from \"@/components/forms/formFooter/FormFooter\";\nimport FormMsg from \"@/components/forms/formMsg/FormMsg\";\nimport FormError from \"@/components/forms/formError/FormError\";\nimport { capitalizeFirstLetters } from \"@/utils/utils\";\nimport FormLinkBtn from \"@/components/forms/formBtns/FormLinkBtn\";\n// import HeaderGeneric2 from \"@/components/header/HeaderGeneric2\";\nimport FormCloseBtn from \"../formBtns/FormCloseBtn\";\nimport HeaderGeneric from \"@/components/header/HeaderGeneric\";\n\nconst Signup = () => {\n\tconst { getCustomError } = useFirebase();\n\n\tconst { signup, signupState } = useSignup();\n\n\t// const {\n\t// \tserviceProviders,\n\t// \tgetSpClients,\n\t// \tgetSpDetailsFromSpName,\n\t// \tgetSpClientsFromName,\n\t// } = useServiceProviders();\n\n\tconst { closeModal } = useModal();\n\n\tconst { user } = useAuthContext() || {};\n\n\tconst initialValues = {\n\t\tsurname: \"\",\n\t\tname: \"\",\n\t\tpassword: \"\",\n\t\tconfirmPassword: \"\",\n\t\temail: \"\",\n\t\tphoneNumber: \"+27\", //\n\n\t\t// nickName: \"type nickname\",\n\t\t// companyName: \"\",\n\t\tworkbase: \"workbase\",\n\t};\n\n\tconst onSubmit = (values) => {\n\t\tconsole.log(`Form values`, values);\n\t\tconst newValues = capitalizeFirstLetters(values);\n\t\tsignup(newValues);\n\t};\n\n\t// TODO: bug  - does not show formik error\n\tconst validationSchema = object({\n\t\tsurname: string().required(\"required.\"),\n\t\tname: string().required(\"required.\"),\n\t\t// nickName: string().notRequired(),\n\t\t// companyName: string()\n\t\t// \t.ensure()\n\t\t// \t.required(\"required.\")\n\t\t// \t.notOneOf([\"choose\", \"\"], \"required\"),\n\t\temail: string().email(\"Email is NOT valid.\").required(\"required.\"),\n\t\tpassword: string().min(6, \"At least 6 characters\").required(\"required.\"),\n\t\tconfirmPassword: string()\n\t\t\t.oneOf([ref(\"password\"), null], \"must match\")\n\t\t\t.required(\"required.\"),\n\t\tphoneNumber: string()\n\t\t\t.min(10, \"At least 10 characters\")\n\t\t\t// .matches(phoneRegExp, \"Phone number is not valid\")\n\t\t\t.required(\"required.\"),\n\t\t// workbase: string()\n\t\t// \t.required(\"required\")\n\t\t// \t.notOneOf([\"choose\", \"\"], \"required\"),\n\t\t// spId: string().notRequired(),\n\t});\n\n\tuseEffect(() => {\n\t\tif (signupState.success) {\n\t\t\tcloseModal();\n\t\t\ttoast.success(\n\t\t\t\t`User \"${user?.displayName}\" successfully signed up with iREPS`,\n\t\t\t\t{\n\t\t\t\t\tposition: \"bottom-left\",\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}, [signupState.success, closeModal, user?.displayName]);\n\n\treturn (\n\t\t<div className=\"form-wrapper\">\n\t\t\t<div className=\"form-container signup\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t>\n\t\t\t\t\t{(formik) => {\n\t\t\t\t\t\t// console.log(`formik.errors`, formik.errors);\n\t\t\t\t\t\t// console.log(`formik.values`, formik.values);\n\n\t\t\t\t\t\t// This will use regular ecpresion to search for matching companyName form list of all service providers\n\t\t\t\t\t\t// const sp = getSpDetailsFromSpName(formik.values.companyName);\n\t\t\t\t\t\t// console.log(`sp`, sp);\n\n\t\t\t\t\t\t// let spClients = getSpClients(sp);\n\n\t\t\t\t\t\t// const result = spClients.find((client) => {\n\t\t\t\t\t\t// \tconst clientStr = client.key.toLowerCase().trim();\n\t\t\t\t\t\t// \t// console.log(`clientStr`, clientStr);\n\n\t\t\t\t\t\t// \t// user regular expresions to search doe a matching nameStr in spStr\n\t\t\t\t\t\t// \tconst re = new RegExp(\"rste\", \"gi\");\n\t\t\t\t\t\t// \t// console.log(`re`, re);\n\n\t\t\t\t\t\t// \treturn re.test(clientStr);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\t// console.log(`result`, result);\n\n\t\t\t\t\t\t// if (result) {\n\t\t\t\t\t\t// \t// const sp = getSpDetails(\"rste\");\n\t\t\t\t\t\t// \tspClients = getSpClientsFromName(\"rste\");\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// console.log(`spClients`, spClients);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<HeaderGeneric hl1=\"Singup/Register\" hr1={<p></p>}>\n\t\t\t\t\t\t\t\t\t\t<FormCloseBtn />\n\t\t\t\t\t\t\t\t\t</HeaderGeneric>\n\t\t\t\t\t\t\t\t\t<FormMsg msg=\"Complete the fields below so as to gain access to iREPS.\" />\n\t\t\t\t\t\t\t\t\t<div className=\"signup-form\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row-2col\">\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Surname\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"surname\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t{/* <FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"companyName\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={serviceProviders.spOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t\t{/* <FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Workbase\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"workbase\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={spClients}\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row-2col\">\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"inputPwd\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Pwd\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"password\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"user password\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"inputPwd\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Pwd\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"confirmPassword\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"Confirm password\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row-1col\">\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"email\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-row-1col phoneNumber\">\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"phoneNumberInput\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone No\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"phoneNumber\"}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{/* <FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Aka\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"nickName\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/* <div className=\"form-row\"></div> */}\n\t\t\t\t\t\t\t\t\t\t{/* <div className=\"form-row-hidden\">\n\t\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"spId\"}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{signupState.error && (\n\t\t\t\t\t\t\t\t\t\t<FormError errorMsg={getCustomError(signupState.error)} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<FormFooter formik={formik} signState={signupState}>\n\t\t\t\t\t\t\t\t\t\t<FormLinkBtn\n\t\t\t\t\t\t\t\t\t\t\ticon={<CiLogin />}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Signin\"\n\t\t\t\t\t\t\t\t\t\t\tlinkName=\"signin\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormFooter>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Signup;\n"],"names":["Signup","getCustomError","useFirebase","signup","signupState","useSignup","closeModal","useModal","user","useAuthContext","initialValues","onSubmit","values","newValues","capitalizeFirstLetters","validationSchema","object","string","ref","useEffect","toast","jsx","Formik","formik","Fragment","Form","HeaderGeneric","FormCloseBtn","FormMsg","jsxs","FormikControl","FormError","FormFooter","FormLinkBtn","CiLogin"],"mappings":"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"}