{"version":3,"file":"FormEditUserEmail-CXkt4k3i.js","sources":["../../src/components/forms/auth/FormEditUserEmail.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\nimport { object, string } from \"yup\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useSignup } from \"@/hooks/useSignup\";\n\n// css\nimport \"@/components/forms/Form.css\";\n\n// custom hooks\nimport useModal from \"@/hooks/useModal.jsx\";\n\n// context\nimport useAuthContext from \"@/hooks/useAuthContext.jsx\";\n\n// components\nimport FormikControl from \"@/components/forms/formik/FormikControl\";\nimport FormFooter from \"@/components/forms/formFooter/FormFooter\";\nimport FormMsg from \"@/components/forms/formMsg/FormMsg\";\nimport FormError from \"@/components/forms/formError/FormError\";\nimport HeaderGeneric from \"@/components/header/HeaderGeneric\";\nimport FormCloseBtn from \"../formBtns/FormCloseBtn\";\n\nconst EditUserEmail = props => {\n\tconsole.log(`props`, props);\n\n\tconst { user } = useAuthContext();\n\n\tconst { closeModal } = useModal();\n\n\tconst { formData: email } = props;\n\n\tconst { updateUserEmail, signupState } = useSignup();\n\n\tconst initialValues = {\n\t\tnewEmail: email,\n\t\temail, //old email adr\n\t\tpassword: \"\",\n\t};\n\n\tconst onSubmit = values => {\n\t\t// console.log(`Form values`, values);\n\t\tupdateUserEmail(values);\n\t};\n\n\tconst validationSchema = object({\n\t\tnewEmail: string()\n\t\t\t.email(\"Email is NOT valid.\")\n\t\t\t.required(\"Email is required.\"),\n\t\temail: string().email(\"Email is NOT valid.\").required(\"Email is required.\"),\n\t\tpassword: string().required(\"Password is required.\"),\n\t});\n\n\tuseEffect(() => {\n\t\tif (signupState.success) {\n\t\t\tcloseModal();\n\t\t\ttoast.success(\n\t\t\t\t`User email for \"${user.displayName}\", succesfully updated on iREPS`,\n\t\t\t\t{\n\t\t\t\t\tposition: \"bottom-left\",\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}, [signupState.success, closeModal]);\n\n\treturn (\n\t\t<div className=\"form-wrapper\">\n\t\t\t<div className=\"form-container edit-user-email\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t>\n\t\t\t\t\t{formik => {\n\t\t\t\t\t\t// console.log(`formik`, formik);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<HeaderGeneric hl1=\"Edit User Email\" hr1={<p></p>} ><FormCloseBtn /></HeaderGeneric>\n\t\t\t\t\t\t\t\t\t<FormMsg msg=\"Enter the new email address on the 'New Email' field below and submit. A valid new email will be delivered into your inbox where you can open it and follow instructions.\" />\n\t\t\t\t\t\t\t\t\t<div className=\"edit-email-form\">\n\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Old Email\"\n\t\t\t\t\t\t\t\t\t\t\tname={\"email\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\tcontrol=\"input\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"New Email\"\n\t\t\t\t\t\t\t\t\t\t\tname={\"newEmail\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormikControl\n\t\t\t\t\t\t\t\t\t\t\tcontrol=\"inputPwd\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\tname={\"password\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"user password\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{signupState.error && <FormError errorMsg={signupState.error} />}\n\t\t\t\t\t\t\t\t\t<FormFooter formik={formik} signState={signupState} />\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EditUserEmail;\n"],"names":["EditUserEmail","props","user","useAuthContext","closeModal","useModal","email","updateUserEmail","signupState","useSignup","initialValues","onSubmit","values","validationSchema","object","string","useEffect","toast","jsx","Formik","formik","Fragment","Form","HeaderGeneric","FormCloseBtn","FormMsg","jsxs","FormikControl","FormError","FormFooter"],"mappings":"ygBAuBA,MAAMA,EAAyBC,GAAA,CACtB,QAAA,IAAI,QAASA,CAAK,EAEpB,KAAA,CAAE,KAAAC,GAASC,IAEX,CAAE,WAAAC,GAAeC,IAEjB,CAAE,SAAUC,CAAU,EAAAL,EAEtB,CAAE,gBAAAM,EAAiB,YAAAC,CAAY,EAAIC,EAAU,EAE7CC,EAAgB,CACrB,SAAUJ,EACV,MAAAA,EACA,SAAU,EAAA,EAGLK,EAAqBC,GAAA,CAE1BL,EAAgBK,CAAM,CAAA,EAGjBC,EAAmBC,EAAO,CAC/B,SAAUC,EAAO,EACf,MAAM,qBAAqB,EAC3B,SAAS,oBAAoB,EAC/B,MAAOA,EAAO,EAAE,MAAM,qBAAqB,EAAE,SAAS,oBAAoB,EAC1E,SAAUA,EAAA,EAAS,SAAS,uBAAuB,CAAA,CACnD,EAEDC,OAAAA,EAAAA,UAAU,IAAM,CACXR,EAAY,UACJJ,IACLa,EAAA,QACL,mBAAmBf,EAAK,WAAW,kCACnC,CACC,SAAU,aACX,CAAA,EAGA,EAAA,CAACM,EAAY,QAASJ,CAAU,CAAC,QAGlC,MAAI,CAAA,UAAU,eACd,SAACc,EAAA,IAAA,MAAA,CAAI,UAAU,iCACd,SAAAA,EAAA,IAACC,EAAA,CACA,cAAAT,EACA,SAAAC,EACA,iBAAAE,EAEC,SAAUO,GAGTF,EAAAA,IAAAG,EAAAA,SAAA,CACC,gBAACC,EACA,CAAA,SAAA,CAACJ,EAAAA,IAAAK,EAAA,CAAc,IAAI,kBAAkB,UAAM,IAAE,CAAA,CAAA,EAAO,SAACL,EAAAA,IAAAM,EAAA,CAAA,CAAa,CAAE,CAAA,EACpEN,EAAAA,IAACO,EAAQ,CAAA,IAAI,2KAA4K,CAAA,EACzLC,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACd,SAAA,CAAAR,EAAA,IAACS,EAAA,CACA,QAAQ,QACR,KAAK,QACL,MAAM,YACN,KAAM,QACN,YAAY,GACZ,SAAQ,EAAA,CACT,EACAT,EAAA,IAACS,EAAA,CACA,QAAQ,QACR,KAAK,QACL,MAAM,YACN,KAAM,WACN,YAAY,GACZ,UAAW,EAAA,CACZ,EACAT,EAAA,IAACS,EAAA,CACA,QAAQ,WACR,KAAK,WACL,MAAM,WACN,KAAM,WACN,YAAY,GACZ,aAAa,eAAA,CACd,CAAA,EACD,EACCnB,EAAY,OAASU,MAACU,EAAU,CAAA,SAAUpB,EAAY,MAAO,EAC7DU,EAAAA,IAAAW,EAAA,CAAW,OAAAT,EAAgB,UAAWZ,CAAa,CAAA,CAAA,CACrD,CAAA,CACD,CAAA,CAEF,CAAA,CAEF,CAAA,CACD,CAAA,CAEF"}