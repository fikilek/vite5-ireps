{"version":3,"file":"useAsts-DX4pH2K5.js","sources":["../../src/hooks/useAstsStats.jsx","../../src/hooks/useGetAstsCollection.jsx","../../src/components/tables/TableDeleteAstBtn.jsx","../../src/hooks/useAsts.jsx"],"sourcesContent":["// npm libraries\n\n// contexts\nimport { getRandomColor } from \"@/utils/utils\";\n\nexport const useAstsStats = () => {\n\t// const { astsStatsContext, setAstsStatsContext } =\n\t// \tuseContext(AstsStatsContext);\n\t// console.log(`astsStatsContext`, astsStatsContext);\n\n\t// const { astsContext } = useContext(AstsContext);\n\t// console.log(`astsContext`, astsContext);\n\n\tconst getAstsUsersStats = (asts) => {\n\t\t// get all asts from astsContext\n\t\t// const { asts } = astsContext;\n\n\t\t// Get stats of who created each ast using uid as the key\n\t\tconst stats = {};\n\t\tasts?.forEach((ast) => {\n\t\t\tstats[ast.metadata.createdByUid] =\n\t\t\t\t1 + (stats[ast.metadata.createdByUid] || 0);\n\t\t});\n\t\t// console.log(`stats`, stats);\n\n\t\t// Update the stats to include other properties including displayName, percentage and random color\n\t\t// for each user. Random  color will be used in charts.\n\t\tconst statsAstsUsers = [];\n\t\tfor (const uid in stats) {\n\t\t\t// console.log(`${uid}: ${object[property]}`);\n\t\t\tconst matchingAst = asts?.find((ast) => {\n\t\t\t\treturn ast?.metadata?.createdByUid === uid;\n\t\t\t});\n\n\t\t\tconst percentage = ((stats[uid] / asts?.length) * 100).toFixed(2);\n\n\t\t\tstatsAstsUsers.push({\n\t\t\t\tuid: uid,\n\t\t\t\tdisplayName: matchingAst?.metadata?.createdByUser,\n\t\t\t\tquantity: stats[uid],\n\t\t\t\tpercentage: percentage,\n\t\t\t\tfillColor: getRandomColor(),\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tstats: statsAstsUsers,\n\t\t\ttotal: asts?.length,\n\t\t};\n\t};\n\n\tconst getMeterTypePerUserStats = (asts) => {\n\t\t// Iterate over asts and find total for each user per meter type (pre-paid or conventional)\n\t\t/**************************************************************\n\t\tpre-paid\n\t\t***************************************************************/\n\t\tconst allAstsPrePaid = asts.filter((ast) => {\n\t\t\treturn ast.astData.meter.type === \"pre-paid\";\n\t\t});\n\t\t// console.log(`allAstsPrePaid`, allAstsPrePaid);\n\n\t\t// Count quantity for each user in the asts pre-paid\n\t\tconst prepaidPerUserStats = {};\n\t\tallAstsPrePaid?.forEach((ast) => {\n\t\t\tprepaidPerUserStats[ast.metadata.createdByUid] =\n\t\t\t\t1 + (prepaidPerUserStats[ast.metadata.createdByUid] || 0);\n\t\t});\n\t\t// console.log(`prepaidPerUserStats`, prepaidPerUserStats);\n\n\t\tconst prepaidStats = [];\n\t\tfor (const uid in prepaidPerUserStats) {\n\t\t\t// console.log(`${uid}: ${prepaidPerUserStats[uid]}`);\n\n\t\t\tconst matchingAst = allAstsPrePaid?.find((ast) => {\n\t\t\t\treturn ast?.metadata?.createdByUid === uid;\n\t\t\t});\n\n\t\t\tconst percentage = (\n\t\t\t\t(prepaidPerUserStats[uid] / allAstsPrePaid?.length) *\n\t\t\t\t100\n\t\t\t).toFixed(2);\n\n\t\t\tprepaidStats.push({\n\t\t\t\tuid: uid,\n\t\t\t\tdisplayName: matchingAst?.metadata?.createdByUser,\n\t\t\t\tquantity: prepaidPerUserStats[uid],\n\t\t\t\tpercentage: percentage,\n\t\t\t\tfillColor: getRandomColor(),\n\t\t\t});\n\t\t}\n\t\t// console.log(`prepaidStats`, prepaidStats);\n\n\t\t/**************************************************************\n\t\tconventional\n\t\t*************************************************************/\n\n\t\tconst allAstsConventional = asts.filter((ast) => {\n\t\t\treturn ast.astData.meter.type === \"conventional\";\n\t\t});\n\t\t// console.log(`allAstsConventional`, allAstsConventional);\n\n\t\t// Count quantity for each user in the asts conventional\n\t\tconst conventionalPerUserStats = {};\n\t\tallAstsConventional?.forEach((ast) => {\n\t\t\tconventionalPerUserStats[ast.metadata.createdByUid] =\n\t\t\t\t1 + (conventionalPerUserStats[ast.metadata.createdByUid] || 0);\n\t\t});\n\t\t// console.log(\n\t\t// \t`conventionalPerUserStats`,\n\t\t// \tconventionalPerUserStats\n\t\t// );\n\n\t\tconst conventionalStats = [];\n\t\tfor (const uid in conventionalPerUserStats) {\n\t\t\t// console.log(`${uid}: ${object[property]}`);\n\t\t\tconst matchingAst = allAstsConventional?.find((ast) => {\n\t\t\t\treturn ast?.metadata?.createdByUid === uid;\n\t\t\t});\n\n\t\t\tconst percentage = (\n\t\t\t\t(conventionalPerUserStats[uid] / allAstsConventional?.length) *\n\t\t\t\t100\n\t\t\t).toFixed(2);\n\n\t\t\tconventionalStats.push({\n\t\t\t\tuid: uid,\n\t\t\t\tdisplayName: matchingAst?.metadata?.createdByUser,\n\t\t\t\tquantity: conventionalPerUserStats[uid],\n\t\t\t\tpercentage: percentage,\n\t\t\t\tfillColor: getRandomColor(),\n\t\t\t});\n\t\t}\n\t\t// console.log(`conventionalStats`, conventionalStats);\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tmeterTypeName: \"pre-paid\",\n\t\t\t\tstats: prepaidStats,\n\t\t\t\ttotal: allAstsPrePaid?.length,\n\t\t\t},\n\t\t\t{\n\t\t\t\tmeterTypeName: \"conventional\",\n\t\t\t\tstats: conventionalStats,\n\t\t\t\ttotal: allAstsConventional.length,\n\t\t\t},\n\t\t];\n\t};\n\n\tconst getAnomalyPerUserStats = (asts) => {\n\t\t// Iterate through the array of asts and accumulate a total for each anomaly\n\t\tconst anomalyStats = {};\n\t\tasts?.forEach((ast) => {\n\t\t\tanomalyStats[ast?.anomalies?.anomaly] =\n\t\t\t\t1 + (anomalyStats[ast?.anomalies?.anomaly] || 0);\n\t\t});\n\t\t// console.log(`anomalyStats`, anomalyStats);\n\n\t\t// Step 3: Iterate through anomalyStats and create user stats and anomaly explanation stats\n\t\tconst anomalyEntries = Object.entries(anomalyStats);\n\t\t// console.log(`anomalyEntries`, anomalyEntries);\n\n\t\tlet anomaliesStats = [];\n\t\tanomalyEntries?.forEach((anomaly) => {\n\t\t\t// console.log(`anomaly`, anomaly);\n\n\t\t\tconst anomalyName = anomaly[0];\n\t\t\t// console.log(`anomalyName`, anomalyName);\n\n\t\t\tconst anomalyStats = anomaly[1];\n\t\t\t// console.log(`anomalyStats`, anomalyStats);\n\n\t\t\t// extract asts that match each anomalyName and create an array\n\t\t\tconst anomalyNameArray = asts?.filter((ast) => {\n\t\t\t\treturn ast?.anomalies?.anomaly === anomalyName;\n\t\t\t});\n\t\t\t// console.log(`--------------------------------------------`);\n\t\t\t// console.log(`anomalyName`, anomalyName);\n\t\t\t// console.log(`anomalyNameArray`, anomalyNameArray);\n\n\t\t\t// get anomaly explanation and stats for each\n\t\t\tconst anomalyDetailStatsObj = {};\n\t\t\tanomalyNameArray?.forEach((ast) => {\n\t\t\t\tanomalyDetailStatsObj[ast?.anomalies?.anomalyDetail] =\n\t\t\t\t\t1 + (anomalyDetailStatsObj[ast?.anomalies?.anomalyDetail] || 0);\n\t\t\t});\n\t\t\t// console.log(`anomalyDetailStatsObj`, anomalyDetailStatsObj);\n\n\t\t\tconst anomalyDetailStatsArray = [];\n\t\t\tfor (const anomalyDetail in anomalyDetailStatsObj) {\n\t\t\t\t// console.log(`${uid}: ${object[property]}`);\n\t\t\t\tconst anomalyDArray = asts?.filter((ast) => {\n\t\t\t\t\treturn ast?.anomalies?.anomalyDetail === anomalyDetail;\n\t\t\t\t});\n\t\t\t\t// console.log(`anomalyDetail`, anomalyDetail);\n\t\t\t\t// console.log(`anomalyDArray`, anomalyDArray);\n\n\t\t\t\tconst userStats = {};\n\t\t\t\tanomalyDArray?.forEach((ast) => {\n\t\t\t\t\tuserStats[ast.metadata.createdByUid] =\n\t\t\t\t\t\t1 + (userStats[ast.metadata.createdByUid] || 0);\n\t\t\t\t});\n\t\t\t\t// console.log(`userStats`, userStats);\n\n\t\t\t\tconst updatedUserStats = [];\n\t\t\t\tfor (const uid in userStats) {\n\t\t\t\t\t// console.log(`${uid}: ${object[property]}`);\n\t\t\t\t\tconst matchingAst = anomalyDArray?.find((ast) => {\n\t\t\t\t\t\treturn ast?.metadata?.createdByUid === uid;\n\t\t\t\t\t});\n\n\t\t\t\t\tconst percentage = ((userStats[uid] / asts?.length) * 100).toFixed(2);\n\n\t\t\t\t\tupdatedUserStats.push({\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\tdisplayName: matchingAst?.metadata?.createdByUser,\n\t\t\t\t\t\tquantity: userStats[uid],\n\t\t\t\t\t\tpercentage: percentage,\n\t\t\t\t\t\tfillColor: getRandomColor(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tanomalyDetailStatsArray.push({\n\t\t\t\t\tanomalyDetailName: anomalyDetail,\n\t\t\t\t\tanomalyDetailStats: anomalyDArray.length,\n\t\t\t\t\tupdatedUserStats,\n\t\t\t\t});\n\t\t\t}\n\t\t\t// console.log(`anomalyDetailStatsArray`, anomalyDetailStatsArray);\n\n\t\t\tanomaliesStats.push({\n\t\t\t\tanomalyName,\n\t\t\t\tanomalyStats,\n\t\t\t\tanomalyDetailStatsArray,\n\t\t\t});\n\t\t});\n\t\t// console.log(`anomaliesStats`, anomaliesStats);\n\n\t\treturn {\n\t\t\tstats: anomaliesStats,\n\t\t\ttotal: asts.length,\n\t\t};\n\t};\n\n\treturn {\n\t\tgetAstsUsersStats,\n\t\tgetMeterTypePerUserStats,\n\t\tgetAnomalyPerUserStats,\n\t};\n};\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tcollection,\r\n\tonSnapshot,\r\n\torderBy,\r\n\twhere,\r\n\tquery,\r\n\tor,\r\n} from \"firebase/firestore\";\r\n\r\n// hooks\r\nimport useAuthContext from \"@/hooks/useAuthContext\";\r\nimport { useFirestore_ } from \"@/hooks/useFirestore_\";\r\nimport { useAstsStats } from \"@/hooks/useAstsStats.jsx\";\r\n\r\n// contexts\r\nimport { AstsContext } from \"@/contexts/AstsContext\";\r\nimport { AstsStatsContext } from \"@/contexts/AstsStatsContext\";\r\n\r\n// components\r\nimport { db } from \"@/firebaseConfig/fbConfig\";\r\n\r\nconst useGetAstsCollection = (fbCollection) => {\r\n\t// console.log(`fbCollection`, fbCollection);\r\n\r\n\tconst { astsContext, setAstsContext } = useContext(AstsContext);\r\n\t// console.log(`astsContext`, astsContext);\r\n\r\n\tconst { astsStatsContext, setAstsStatsContext } =\r\n\t\tuseContext(AstsStatsContext);\r\n\t// console.log(`astsStatsContext`, astsStatsContext);\r\n\r\n\tconst [asts, setAsts] = useState([]);\r\n\t// console.log(`asts`, asts);\r\n\r\n\tconst [error, setError] = useState(\"\");\r\n\t// console.log(`error`, error);\r\n\r\n\tconst { getDocument } = useFirestore_(\"users\");\r\n\r\n\tconst { user } = useAuthContext();\r\n\t// console.log(`user`, user);\r\n\r\n\tconst {\r\n\t\tgetAstsUsersStats,\r\n\t\tgetMeterTypePerUserStats,\r\n\t\tgetAnomalyPerUserStats,\r\n\t} = useAstsStats();\r\n\r\n\tconst uid = user?.uid;\r\n\t// console.log(`uid`, uid);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDocument(uid).then((userData) => {\r\n\t\t\t// console.log(`userData`, userData);\r\n\r\n\t\t\tconst { workbase } = userData?.doc;\r\n\t\t\t// console.log(`workbase`, workbase);\r\n\r\n\t\t\tconst constraints = where(\"erf.address.lmMetro\", \"==\", workbase);\r\n\t\t\t// console.log(`constraints`, constraints);\r\n\r\n\t\t\tif (!constraints) return;\r\n\t\t\tconst q = query(\r\n\t\t\t\tcollection(db, fbCollection),\r\n\t\t\t\tor(constraints, where(\"astData.astState.state\", \"==\", \"stores\")),\r\n\t\t\t\torderBy(\"metadata.updatedAtDatetime\", \"desc\")\r\n\t\t\t);\r\n\r\n\t\t\tsetError(\"\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\tonSnapshot(\r\n\t\t\t\t\tq,\r\n\t\t\t\t\t(snapShot) => {\r\n\t\t\t\t\t\tconst results = [];\r\n\t\t\t\t\t\tsnapShot.docs.forEach((doc) => {\r\n\t\t\t\t\t\t\tresults.push({ id: doc.id, ...doc.data() });\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// console.log(`results`, results);\r\n\t\t\t\t\t\t// results.splice(90);\r\n\r\n\t\t\t\t\t\tsetAsts(results);\r\n\r\n\t\t\t\t\t\t// asts per user stats\r\n\t\t\t\t\t\tconst statsAstsUsers = getAstsUsersStats(results);\r\n\r\n\t\t\t\t\t\t// audits pre-paid and conventional\r\n\t\t\t\t\t\tconst meterTypePerUserStats = getMeterTypePerUserStats(results);\r\n\r\n\t\t\t\t\t\t// anomaly per user stats\r\n\t\t\t\t\t\tconst anomalyPerUserStats = getAnomalyPerUserStats(results);\r\n\r\n\t\t\t\t\t\tsetAstsContext({\r\n\t\t\t\t\t\t\t...astsContext,\r\n\t\t\t\t\t\t\tasts: results,\r\n\t\t\t\t\t\t\t// statsCreatedAtDatetimeByUser: updatedStats,\r\n\t\t\t\t\t\t\t// anomaliesStats,\r\n\t\t\t\t\t\t\t// auditsPrepaidStats,\r\n\t\t\t\t\t\t\t// auditsConventionalStats,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsetAstsStatsContext((prev) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\tstatsAstsUsers,\r\n\t\t\t\t\t\t\t\tmeterTypePerUserStats,\r\n\t\t\t\t\t\t\t\tanomalyPerUserStats,\r\n\t\t\t\t\t\t\t\t// statsCreatedAtDatetimeByUser: updatedStats,\r\n\t\t\t\t\t\t\t\t// anomaliesStats,\r\n\t\t\t\t\t\t\t\t// auditsPrepaidStats,\r\n\t\t\t\t\t\t\t\t// auditsConventionalStats,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\tconsole.log(`firestore err`, err.message);\r\n\t\t\t\t\t\tsetError(err.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tsetError(\"\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Error on useGetAstsCollection - getDocument`,\r\n\t\t\t\t\terror.message\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn { asts, error };\r\n};\r\n\r\nexport default useGetAstsCollection;\r\n","// npm libraries\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdOutlineDeleteForever, MdBackHand } from \"react-icons/md\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// css\r\nimport \"@/components/tables/TableDeleteAstBtn.css\";\r\n\r\n// hooks\r\nimport useAuthContext from \"@/hooks/useAuthContext\";\r\n\r\n// other\r\nimport { irepsDictionary } from \"@/utils/utils\";\r\n\r\nconst TableDeleteAstBtn = (props) => {\r\n\t// console.log(`props`, props);\r\n\tconst { data } = props?.data;\r\n\r\n\tconst { astNo, astId } = data?.astData;\r\n\t// console.log(`astNo`, astNo);\r\n\t// console.log(`astId`, astId);\r\n\r\n\tconst { user } = useAuthContext();\r\n\t// console.log(`user`, user);\r\n\r\n\tconst { superuser } = user?.claims;\r\n\t// console.log(`superuser`, superuser);\r\n\r\n\tconst { deleteAst } = data;\r\n\t// console.log(`deleteAst`, deleteAst);\r\n\r\n\tconst functions = getFunctions();\r\n\tconst actionDeleteAst = httpsCallable(functions, \"actionDeleteAst\");\r\n\r\n\tconst handleAstDelete = (e) => {\r\n\t\t// console.log(`e.target.dataset-action`, e.target.dataset.action);\r\n\t\t// console.log(`e.currentTarget`, e.currentTarget);\r\n\t\t// console.log(`e.target.value`, e.target.value);\r\n\t\t// console.log(`e.target.id`, e.target.id);\r\n\r\n\t\tconst astId = e.target.id;\r\n\t\t// console.log(`astId`, astId);\r\n\r\n\t\tconst action = e.target.dataset.action;\r\n\t\tconsole.log(`action`, action);\r\n\r\n\t\tactionDeleteAst({\r\n\t\t\tastId,\r\n\t\t\taction,\r\n\t\t})\r\n\t\t\t// TODO: something I dont understand. e.target.value changes after data has been written to the DB. THis is strange. I should NOT change.\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconsole.log(`result`, result);\r\n\t\t\t\t// console.log(`e.target.value`, e.target.value);\r\n\t\t\t\ttoast.success(\r\n\t\t\t\t\t`Ast [${astNo}] delete status updated to ${irepsDictionary.get(\r\n\t\t\t\t\t\taction\r\n\t\t\t\t\t)}`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposition: \"bottom-left\",\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(`Error:`, error.message);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"table-delete-ast-btn\">\r\n\t\t\t{deleteAst != \"deletePending\" || deleteAst === \"restored\" ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\t// className={`table-btn ${tableBtnClass}`}\r\n\t\t\t\t\tclassName={\"table-btn init-delete-btn\"}\r\n\t\t\t\t\tonClick={handleAstDelete}\r\n\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\ttitle={\"Delete Ast\"}\r\n\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\tdata-action=\"initDelete\"\r\n\t\t\t\t\tid={astId}\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{superuser ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={\"table-btn final-delete-btn\"}\r\n\t\t\t\t\t\t\tonClick={handleAstDelete}\r\n\t\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\t\ttitle={\"Final Delete Ast\"}\r\n\t\t\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\t\t\tdata-action=\"finalDelete\"\r\n\t\t\t\t\t\t\tid={astId}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<p>FD</p>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={\"table-btn un-delete-btn\"}\r\n\t\t\t\t\t\tonClick={handleAstDelete}\r\n\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\ttitle={\"Undo Delete Ast\"}\r\n\t\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\t\tdata-action=\"reverseDelete\"\r\n\t\t\t\t\t\tid={astId}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRD\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableDeleteAstBtn;\r\n","import { useContext } from \"react\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\nimport { format } from \"date-fns\";\r\n\r\n// hooks\r\nimport useGetAstsCollection from \"@/hooks/useGetAstsCollection\";\r\n// import useGetAstsReports from \"./useGetAstsReports\";\r\n\r\n// contexts\r\nimport { AstsContext } from \"@/contexts/AstsContext.jsx\";\r\n\r\n// components\r\nimport TableDate from \"@/components/tables/TableDate\";\r\nimport TableModalBtn from \"@/components/tables/TableModalBtn\";\r\nimport TableDeleteAstBtn from \"@/components/tables/TableDeleteAstBtn\";\r\nimport TableBtnsPossibleTrnsOnAst from \"@/components/tables/TableBtnsPossibleTrnsOnAst\";\r\n\r\nconst getUrl = (mediaArray, astCat) => {\r\n\t// console.log(`mediaArray`, mediaArray);\r\n\r\n\tconst mediaCat = mediaArray?.find((media) => media?.mediaCategory === astCat);\r\n\t// console.log(`mediaCat`, mediaCat);\r\n\t// console.log(`astCat`, astCat);\r\n\r\n\tconst url = mediaCat?.url;\r\n\t// console.log(`url`, url);\r\n\treturn url;\r\n};\r\n\r\nexport const useAsts = () => {\r\n\tconst { astsContext, setAstsContext } = useContext(AstsContext);\r\n\r\n\tconst { error } = useGetAstsCollection(\"asts\");\r\n\t// console.log(`asts`, asts);\r\n\t// console.log(`error`, error);\r\n\r\n\tconst createExportRowData = (rowData) => {\r\n\t\t// console.log(`rowData`, rowData);\r\n\t\tif (rowData?.length < 1) return;\r\n\r\n\t\tconst newRowData =\r\n\t\t\trowData &&\r\n\t\t\trowData?.map((row) => {\r\n\t\t\t\tconst media = row?.media;\r\n\t\t\t\t// console.log(`media`, media);\r\n\r\n\t\t\t\tconst createdAt = row.metadata.createdAtDatetime;\r\n\t\t\t\t// console.log(`createdAt`, createdAt);\r\n\t\t\t\tconst cTimestamp = new Timestamp(\r\n\t\t\t\t\tcreatedAt?.seconds,\r\n\t\t\t\t\tcreatedAt?.nanoseconds\r\n\t\t\t\t);\r\n\t\t\t\tconst newCreatedAt = cTimestamp?.toDate();\r\n\r\n\t\t\t\tconst updatedAt = row.metadata.updatedAtDatetime;\r\n\t\t\t\tconst uTimestamp = new Timestamp(\r\n\t\t\t\t\tupdatedAt?.seconds,\r\n\t\t\t\t\tupdatedAt?.nanoseconds\r\n\t\t\t\t);\r\n\t\t\t\tconst newUpdatedAt = uTimestamp?.toDate();\r\n\r\n\t\t\t\tconst newRow = {\r\n\t\t\t\t\tid: row.id,\r\n\t\t\t\t\t// metadata\r\n\t\t\t\t\t\"Created By\": row.metadata.createdByUser,\r\n\t\t\t\t\t\"Created At\": format(newCreatedAt, \"yy-MM-dd HH:mm\"),\r\n\t\t\t\t\t\"Last Updated By\": row.metadata.updatedByUser,\r\n\t\t\t\t\t\"Last Updated At Datetime\": format(newUpdatedAt, \"yy-MM-dd HH:mm\"),\r\n\r\n\t\t\t\t\t\"Meter No\": row?.astData?.astNo,\r\n\t\t\t\t\t\"Meter No picture\": getUrl(media, \"astNo\"),\r\n\r\n\t\t\t\t\t\"Meter Manufacturer\": row?.astData?.astManufacturer,\r\n\t\t\t\t\t\"Meter Name\": row?.astData?.astName,\r\n\t\t\t\t\t\"Meter Type\": row?.astData?.meter?.type,\r\n\t\t\t\t\t\"Meter Phase\": row?.astData?.meter?.phase,\r\n\r\n\t\t\t\t\t\"CB Size\": row?.astData?.meter?.cb?.size,\r\n\t\t\t\t\t\"CB picture\": getUrl(media, \"cb\"),\r\n\t\t\t\t\t\"CB Comment\": row?.astData?.meter?.cb?.comment,\r\n\r\n\t\t\t\t\t\"Seal Number\": row?.astData?.meter?.seal?.sealNo,\r\n\t\t\t\t\t\"Seal Number picture\": getUrl(media, \"seal\"),\r\n\t\t\t\t\t\"Seal Comment\": row?.astData?.meter?.seal?.comment,\r\n\r\n\t\t\t\t\tAnomaly: row?.anomalies?.anomaly,\r\n\t\t\t\t\t\"Anomaly picture\": getUrl(media, \"anomaly\"),\r\n\t\t\t\t\t\"Anomaly Detail\": row?.anomalies?.anomalyDetail,\r\n\r\n\t\t\t\t\t\"Erf No\": row?.erf?.erfNo,\r\n\t\t\t\t\t\"Street Adr\": row?.erf?.street,\r\n\r\n\t\t\t\t\t\"Property Type\": row?.erf?.propertyType?.type,\r\n\t\t\t\t\t\"Unit Name\": row?.erf?.propertyType?.unitName,\r\n\t\t\t\t\t\"Unit No\": row?.erf?.propertyType?.unitNo,\r\n\r\n\t\t\t\t\t\"Meter Placement\": row?.location?.placement,\r\n\t\t\t\t\t\"Meter Placement picture\": getUrl(media, \"insideBox\"),\r\n\r\n\t\t\t\t\t\"Meter Address\": row?.location?.address,\r\n\t\t\t\t\t\"Service Connection Status\": row?.serviceConnection?.configuration,\r\n\r\n\t\t\t\t\t\"Off Grid Supply\": row?.serviceConnection?.offGridSupply,\r\n\t\t\t\t\t\"Off Grid picture\": getUrl(media, \"offGridPhoto\"),\r\n\r\n\t\t\t\t\t\"TID Status\": row?.tidStatus?.status,\r\n\t\t\t\t\t\"TID Status picture\": getUrl(media, \"tidStatus\"),\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// console.log(`newRow`, newRow);\r\n\t\t\t\treturn newRow;\r\n\t\t\t});\r\n\t\treturn newRowData;\r\n\t};\r\n\r\n\tconst astsTableFields = [\r\n\t\t// ast id\r\n\t\t{\r\n\t\t\tfield: \"id\",\r\n\t\t\theaderName: \"System Id\",\r\n\t\t\twidth: 200,\r\n\t\t\thide: true,\r\n\t\t},\r\n\r\n\t\t// ast created\r\n\t\t{\r\n\t\t\theaderName: \"Created\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.createdByUser\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Created By\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.createdByUser\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Created By\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.createdAtDatetime\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Date Created\",\r\n\t\t\t\t\twidth: 160,\r\n\t\t\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t\t\tconst timestamp = new Timestamp(\r\n\t\t\t\t\t\t\tparams?.value?.seconds,\r\n\t\t\t\t\t\t\tparams?.value?.nanoseconds\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst newDate = timestamp?.toDate();\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableDate date={newDate} dateFormat={\"yyyy-MMM-dd HH:mm\"} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalueGetter: (params) => {\r\n\t\t\t\t\t\treturn params.data?.metadata?.createdAtDatetime;\r\n\t\t\t\t\t},\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t// ast updated\r\n\t\t{\r\n\t\t\theaderName: \"Last Updated\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.updatedByUser\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Updated By\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.updatedByUser\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Updated By\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"metadata.updatedAtDatetime\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Date Updated\",\r\n\t\t\t\t\twidth: 160,\r\n\t\t\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t\t\t// console.log(`params`, params);\r\n\t\t\t\t\t\tconst timestamp = new Timestamp(\r\n\t\t\t\t\t\t\tparams.value.seconds,\r\n\t\t\t\t\t\t\tparams.value.nanoseconds\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst newDate = timestamp.toDate();\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableDate date={newDate} dateFormat={\"yyyy-MMM-dd HH:mm\"} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalueGetter: (params) => {\r\n\t\t\t\t\t\treturn params.data.metadata.updatedAtDatetime;\r\n\t\t\t\t\t},\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"delete\", //['null, 'pendingDelete']\r\n\t\t\t\t\t// columnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Delete\",\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\teditable: true,\r\n\t\t\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t\t\t// console.log(`params`, params);\r\n\t\t\t\t\t\treturn <TableDeleteAstBtn data={params} />;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalueGetter: (params) => {\r\n\t\t\t\t\t\t// console.log(`params.data.disabled`, params.data.disabled);\r\n\t\t\t\t\t\treturn params.data.delete;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// valueSetter: (params) => {\r\n\t\t\t\t\t// \t// console.log(`params.newValue`, params.newValue);\r\n\t\t\t\t\t// \tparams.data.disabled =\r\n\t\t\t\t\t// \t\tparams.newValue === \"disabled\" ? true : false;\r\n\t\t\t\t\t// \treturn true;\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\r\n\t\t// Erf ast belongs to\r\n\t\t{\r\n\t\t\tfield: \"erf.erfNo\",\r\n\t\t\theaderName: \"Erf No\",\r\n\t\t\twidth: 100,\r\n\t\t\ttooltipField: \"Erf the ast belong to\",\r\n\t\t\t// filterParams: {\r\n\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t// },\r\n\t\t\thide: false,\r\n\t\t},\r\n\t\t// Ward\r\n\t\t{\r\n\t\t\tfield: \"erf.address.ward\",\r\n\t\t\theaderName: \"Ward\",\r\n\t\t\twidth: 100,\r\n\t\t\t// filterParams: {\r\n\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t// },\r\n\t\t},\r\n\t\t// Ast History\r\n\t\t// {\r\n\t\t// \tfield: \"ast.astHistory\",\r\n\t\t// \theaderName: \"Meter History\",\r\n\t\t// \twidth: 150,\r\n\t\t// \tcellRenderer: (params) => {\r\n\t\t// \t\t// console.log(`params`, params);\r\n\t\t// \t\tconst astHistory = params.data?.astHistory?.length\r\n\t\t// \t\t\t? params.data?.astHistory?.length\r\n\t\t// \t\t\t: 0;\r\n\t\t// \t\treturn <TableModalBtn data={params}>{astHistory}</TableModalBtn>;\r\n\t\t// \t},\r\n\t\t// \tcellRendererParams: {\r\n\t\t// \t\tmodalName: \"iwHistory\",\r\n\t\t// \t\twidth: \"3rem\",\r\n\t\t// \t\tinfoName: {\r\n\t\t// \t\t\tirepsKeyItem: \"asts\",\r\n\t\t// \t\t},\r\n\t\t// \t},\r\n\t\t// },\r\n\t\t// Ast description\r\n\t\t{\r\n\t\t\theaderName: \"Meter Description\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.astNo\",\r\n\t\t\t\t\theaderName: \"Meter No\",\r\n\t\t\t\t\twidth: 170,\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t\t\t// console.log(`params`, params);\r\n\t\t\t\t\t\treturn <TableModalBtn data={params}>{params.value}</TableModalBtn>;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcellRendererParams: {\r\n\t\t\t\t\t\tmodalName: \"meterReport\",\r\n\t\t\t\t\t\twidth: \"8rem\",\r\n\t\t\t\t\t\tirepsKeyItem: \"asts\",\r\n\t\t\t\t\t\tdisplayMode: \"modal\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.astCatergory\",\r\n\t\t\t\t\theaderName: \"Category\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: true,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.astManufacturer\",\r\n\t\t\t\t\theaderName: \"Manufacturer (Brand)\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.astName\",\r\n\t\t\t\t\theaderName: \"Model Name\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t\t// filterParams: {\r\n\t\t\t\t\t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t\t// {\r\n\t\t\t\t// \tfield: \"astData.astState\",\r\n\t\t\t\t// \theaderName: \"State\",\r\n\t\t\t\t// \tcolumnGroupShow: \"closed\",\r\n\t\t\t\t// \twidth: 150,\r\n\t\t\t\t// \thide: false,\r\n\t\t\t\t// \t// filterParams: {\r\n\t\t\t\t// \t// \tbuttons: [\"apply\", \"clear\", \"cancel\", \"reset\"],\r\n\t\t\t\t// \t// },\r\n\t\t\t\t// },\r\n\t\t\t],\r\n\t\t},\r\n\t\t// trn history\r\n\t\t// {\r\n\t\t// \tfield: \"metadata.trnHistory\",\r\n\t\t// \theaderName: \"History\",\r\n\t\t// \twidth: 100,\r\n\t\t// },\r\n\r\n\t\t// ast media - all phots, voice clips and videos of the ast.\r\n\t\t{\r\n\t\t\tfield: \"\",\r\n\t\t\theaderName: \"Meter Media\",\r\n\t\t\twidth: 150,\r\n\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t// console.log(`props`, props);\r\n\t\t\t\treturn <TableModalBtn data={params}>{params.value}</TableModalBtn>;\r\n\t\t\t},\r\n\r\n\t\t\tcellRendererParams: {\r\n\t\t\t\tmodalName: \"mediaMobileAsts\",\r\n\t\t\t\twidth: \"4rem\",\r\n\t\t\t\tirepsKeyItem: \"asts\",\r\n\t\t\t\tdisplayMode: \"modal\",\r\n\t\t\t},\r\n\t\t\tvalueGetter: (params) => {\r\n\t\t\t\t// console.log(`params`, params);\r\n\t\t\t\tconst media = params?.data?.media?.length\r\n\t\t\t\t\t? params?.data?.media?.length\r\n\t\t\t\t\t: 0;\r\n\t\t\t\treturn media;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// possible trns\r\n\t\t{\r\n\t\t\tfield: \"trns\",\r\n\t\t\theaderName: \"Trns On Meter\",\r\n\t\t\twidth: 130,\r\n\t\t\t// valueGetter: params => {\r\n\t\t\t// \treturn params.data?.trns?.length ? params.data?.trns?.length : 0;\r\n\t\t\t// },\r\n\t\t\t// tooltipField: \"asts\",\r\n\t\t\tcellRenderer: TableBtnsPossibleTrnsOnAst,\r\n\t\t\tcellRendererParams: {\r\n\t\t\t\t// modalName: \"iwTrnsOnAst\",\r\n\t\t\t\t// width: \"4rem\",\r\n\t\t\t\tcolumnName: \"tidTrn\",\r\n\t\t\t},\r\n\t\t\thide: false,\r\n\t\t\t// tooltipComponent: TableTrnsForAstsTooltip,\r\n\t\t\tvalueGetter: (params) => {\r\n\t\t\t\t// console.log(`params.data`, params.data);\r\n\t\t\t\treturn params.data;\r\n\t\t\t},\r\n\t\t\tfilter: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tfield: \"location.gps\",\r\n\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\theaderName: \"Meter on Map\",\r\n\r\n\t\t\tcellRenderer: (params) => {\r\n\t\t\t\t// console.log(`params`, params)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TableModalBtn data={params}>\r\n\t\t\t\t\t\t<IconContext.Provider value={{ color: \"blue\", fontSize: \"1rem\" }}>\r\n\t\t\t\t\t\t\t<FaMapMarkedAlt />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</TableModalBtn>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tcellRendererParams: {\r\n\t\t\t\tmodalName: \"showAstOnMap\",\r\n\t\t\t\twidth: \"3rem\",\r\n\t\t\t},\r\n\t\t\tvalueGetter: (params) => {\r\n\t\t\t\tconst lat = Number(params.data?.location?.gps?.lat);\r\n\t\t\t\tconst lng = Number(params.data?.location?.gps?.lng);\r\n\t\t\t\treturn `${lat.toFixed(3)} / ${lng.toFixed(3)}`;\r\n\t\t\t},\r\n\t\t\twidth: 140,\r\n\t\t\tfilter: false,\r\n\t\t},\r\n\r\n\t\t// trn history\r\n\t\t{\r\n\t\t\tfield: \"astData.astState.state\",\r\n\t\t\theaderName: \"Meter State\",\r\n\t\t\twidth: 250,\r\n\t\t\tvalueGetter: (params) => {\r\n\t\t\t\tlet astState = \"\";\r\n\t\t\t\tif (params.data?.astData.astState.state === \"stores\") {\r\n\t\t\t\t\tastState = `${params.data?.astData?.astState?.state} : ${params.data?.astData?.astState?.location}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (params.data?.astData.astState.state === \"service\") {\r\n\t\t\t\t\tastState = `service : ${params.data?.erf?.address?.lmMetro} - ${params.data?.erf.erfNo}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (params.data?.astData?.astState?.state === \"temper\") {\r\n\t\t\t\t\tastState = `temper : ${params.data?.erf.address.lmMetro} - ${params.data?.erf.erfNo}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tparams.data?.astData?.astState?.state == \"\" ||\r\n\t\t\t\t\tparams.data?.astData?.astState?.state == null ||\r\n\t\t\t\t\tparams.data?.astData?.astState?.state == undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\tastState = `service : ${params.data?.erf?.address?.lmMetro} - ${params.data?.erf.erfNo}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// else {\r\n\t\t\t\t// \tastState = `service - ${params.data?.erf?.erfNo}`\r\n\t\t\t\t// }\r\n\t\t\t\treturn astState;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// ast creator\r\n\t\t{\r\n\t\t\tfield: \"metadata.createdThrough.creatorTrnName\",\r\n\t\t\theaderName: \"Meter Creator\",\r\n\t\t\twidth: 140,\r\n\t\t},\r\n\r\n\t\t// // trns - all trns on the ast\r\n\t\t// {\r\n\t\t// \tfield: \"trns\",\r\n\t\t// \theaderName: \"Trns On Ast\",\r\n\t\t// \twidth: 130,\r\n\t\t// \tvalueGetter: params => {\r\n\t\t// \t\treturn params.data?.trns?.length ? params.data?.trns?.length : 0;\r\n\t\t// \t},\r\n\t\t// \t// tooltipField: \"asts\",\r\n\t\t// \tcellRenderer: params => {\r\n\t\t// \t\t// console.log(`params`, params);\r\n\t\t// \t\treturn <TableModalBtn data={params}>{params.value}</TableModalBtn>;\r\n\t\t// \t},\r\n\t\t// \tcellRendererParams: {\r\n\t\t// \t\tmodalName: \"iwTrnsOnAst\",\r\n\t\t// \t\twidth: \"4rem\",\r\n\t\t// \t},\r\n\t\t// \thide: false,\r\n\t\t// \t// tooltipComponent: TableTrnsForAstsTooltip,\r\n\t\t// },\r\n\r\n\t\t// Ast Specific data\r\n\t\t{\r\n\t\t\theaderName: \"Meter Specific Data\",\r\n\t\t\tchildren: [\r\n\t\t\t\t// astCat\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.type\",\r\n\t\t\t\t\t// columnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Meter Type\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.phase\",\r\n\t\t\t\t\t// columnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Meter Phase\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t\thide: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t// Ast Anomalies\r\n\t\t{\r\n\t\t\theaderName: \"Anomalies\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"anomalies.anomaly\",\r\n\t\t\t\t\t// columnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Anomaly\",\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"anomalies.anomalyDetail\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Anomaly Detail\",\r\n\t\t\t\t\twidth: 300,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\r\n\t\t// Ast Location\r\n\t\t{\r\n\t\t\theaderName: \"Meter Location\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"location.address\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Ast Address\",\r\n\t\t\t\t\twidth: 450,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"location.placement\",\r\n\t\t\t\t\tcolumnGroupShow: \"closed\",\r\n\t\t\t\t\theaderName: \"Placement\",\r\n\t\t\t\t\twidth: 190,\r\n\t\t\t\t},\r\n\t\t\t\t// {\r\n\t\t\t\t// \tfield: \"location.premises\",\r\n\t\t\t\t// \tcolumnGroupShow: \"closed\",\r\n\t\t\t\t// \theaderName: \"Premises\",\r\n\t\t\t\t// \twidth: 120,\r\n\t\t\t\t// },\r\n\t\t\t\t// {\r\n\t\t\t\t// \tfield: \"location.insideBox\",\r\n\t\t\t\t// \tcolumnGroupShow: \"closed\",\r\n\t\t\t\t// \theaderName: \"InsideBox\",\r\n\t\t\t\t// \twidth: 120,\r\n\t\t\t\t// },\r\n\t\t\t],\r\n\t\t},\r\n\r\n\t\t// Meter Keypad\r\n\t\t// {\r\n\t\t// \theaderName: \"Keypad\",\r\n\t\t// \tchildren: [\r\n\r\n\t\t// \t\t{\r\n\t\t// \t\t\tfield: \"astData.meter.keypad.serialNo\",\r\n\t\t// \t\t\tcolumnGroupShow: \"open\",\r\n\t\t// \t\t\theaderName: \"Keypad Serial No\",\r\n\t\t// \t\t\twidth: 160,\r\n\t\t// \t\t},\r\n\t\t// \t\t{\r\n\t\t// \t\t\tfield: \"astData.meter.keypad.comment\",\r\n\t\t// \t\t\tcolumnGroupShow: \"open\",\r\n\t\t// \t\t\theaderName: \"Keypad Comment\",\r\n\t\t// \t\t\twidth: 300,\r\n\t\t// \t\t},\r\n\t\t// \t],\r\n\t\t// },\r\n\r\n\t\t// Meter CB\r\n\t\t{\r\n\t\t\theaderName: \"Circuit Breaker (CB)\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.cb.size\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"CB (Amps)\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.cb.comment\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"CB Comment\",\r\n\t\t\t\t\twidth: 300,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\r\n\t\t// Meter Seal\r\n\t\t{\r\n\t\t\theaderName: \"Seal\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.seal.sealNo\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Seal No\",\r\n\t\t\t\t\twidth: 150,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfield: \"astData.meter.seal.comment\",\r\n\t\t\t\t\tcolumnGroupShow: \"open\",\r\n\t\t\t\t\theaderName: \"Seal Comment\",\r\n\t\t\t\t\twidth: 300,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\r\n\t\t// Service connection\r\n\t\t{\r\n\t\t\tfield: \"serviceConnection.configuration\",\r\n\t\t\theaderName: \"Service Connection\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"serviceConnection.offGridSupply\",\r\n\t\t\theaderName: \"Off Grid Supply\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\r\n\t\t// Tid status\r\n\t\t{\r\n\t\t\tfield: \"tid.status\",\r\n\t\t\theaderName: \"Tid Status\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"tid.statusComment\",\r\n\t\t\theaderName: \"Tid Status Comment\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t];\r\n\r\n\treturn { astsTableFields, createExportRowData, error };\r\n};\r\n"],"names":["useAstsStats","asts","stats","ast","statsAstsUsers","uid","matchingAst","_a","percentage","getRandomColor","allAstsPrePaid","prepaidPerUserStats","prepaidStats","allAstsConventional","conventionalPerUserStats","conventionalStats","_b","anomalyStats","anomalyEntries","anomaliesStats","anomaly","anomalyName","anomalyNameArray","anomalyDetailStatsObj","anomalyDetailStatsArray","anomalyDetail","anomalyDArray","userStats","updatedUserStats","useGetAstsCollection","fbCollection","astsContext","setAstsContext","useContext","AstsContext","astsStatsContext","setAstsStatsContext","AstsStatsContext","setAsts","useState","error","setError","getDocument","useFirestore_","user","useAuthContext","getAstsUsersStats","getMeterTypePerUserStats","getAnomalyPerUserStats","useEffect","userData","workbase","constraints","where","q","query","collection","db","or","orderBy","onSnapshot","snapShot","results","doc","meterTypePerUserStats","anomalyPerUserStats","prev","err","TableDeleteAstBtn","props","data","astNo","astId","superuser","deleteAst","functions","getFunctions","actionDeleteAst","httpsCallable","handleAstDelete","e","action","result","toast","irepsDictionary","jsx","jsxs","Fragment","getUrl","mediaArray","astCat","mediaCat","media","useAsts","params","timestamp","Timestamp","newDate","TableDate","TableModalBtn","_d","_c","TableBtnsPossibleTrnsOnAst","IconContext","FaMapMarkedAlt","lat","lng","_f","_e","astState","_g","_h","_k","_j","_i","_l","_o","_n","_m","_p","_q","_t","_s","_r","_w","_v","_u","_z","_y","_x","_C","_B","_A","_D","rowData","row","createdAt","cTimestamp","newCreatedAt","updatedAt","uTimestamp","newUpdatedAt","format","_E","_F","_G","_H"],"mappings":"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"}