{"version":3,"file":"Map-D8DbEfAW.js","sources":["../../src/components/maps/MapLmWardBoundaries.jsx","../../src/components/maps/MapLmBoundary.jsx","../../src/components/maps/ErfMarker.jsx","../../src/components/maps/ClusteredErfMarkers.jsx","../../src/components/maps/AstMarker.jsx","../../src/components/maps/ClusteredAstMarkers.jsx","../../src/components/maps/MapAstFilter.jsx","../../src/components/maps/MapErfFilter.jsx","../../src/components/map/MapMain.jsx","../../src/components/map/MapHeader.jsx","../../src/pages/map/Map.jsx"],"sourcesContent":["// npm libraries\r\nimport { useEffect, useContext } from \"react\";\r\n\r\n// css\r\nimport \"@/components/maps/MapLmWardBoundaries.css\";\r\n\r\n// hooks\r\nimport useIrepsMap from \"@/hooks/useIrepsMap\";\r\nimport { useMap, MapControl, ControlPosition } from \"@vis.gl/react-google-maps\";\r\n\r\n// context\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\n\r\nconst MapLmWardBoundaries = () => {\r\n\t// console.log(`MapLmWardBoundaries`);\r\n\r\n\tconst { erfsContext, setErfsContext } = useContext(ErfsContext);\r\n\t// console.log(`erfsContext`, erfsContext);\r\n\r\n\tconst map = useMap();\r\n\t// console.log(`map`, map);\r\n\r\n\t// const maps = useMapsLibrary('maps');\r\n\t// console.log(`maps`, maps);\r\n\r\n\tconst {\r\n\t\tdisplayLMWardBoundaries,\r\n\t\tstate,\r\n\t\tfitWardBoundary,\r\n\t\tdisplayLmBoundary,\r\n\t\t// setSelectedWardBoundaries,\r\n\t} = useIrepsMap();\r\n\t// console.log(`displayLMWardBoundaries`, displayLMWardBoundaries)\r\n\t// console.log(`state`, state);\r\n\r\n\tconst { lmWardBoundaries, lmBoundary } = state;\r\n\t// console.log(`lmWardBoundaries`, lmWardBoundaries);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!map) return;\r\n\r\n\t\tdisplayLMWardBoundaries(map);\r\n\t\t// return map.data.forEach((feature) => map.data.remove(feature));\r\n\t}, [displayLMWardBoundaries, map]);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\t// console.log(`e.currentTarget.value`, e.currentTarget.value);\r\n\t\tconst selectedWard = e.currentTarget?.value;\r\n\t\t// console.log(`selectedWard`, selectedWard);\r\n\r\n\t\ttry {\r\n\t\t\t// filter in only the selected ward\r\n\t\t\tconst selection = lmWardBoundaries?.find((wardBoundary) => {\r\n\t\t\t\t// console.log(`wardBoundary.ward`, wardBoundary.ward)\r\n\t\t\t\t// console.log(`selectedWard`, selectedWard)\r\n\r\n\t\t\t\treturn Number(wardBoundary?.ward) === Number(selectedWard);\r\n\t\t\t});\r\n\t\t\t// console.log(`selection`, selection);\r\n\r\n\t\t\tmap.data.forEach((feature) => {\r\n\t\t\t\t// console.log(`feature`, feature);\r\n\t\t\t\tmap.data.remove(feature);\r\n\t\t\t});\r\n\r\n\t\t\tif (selectedWard === \"All Wards\") {\r\n\t\t\t\tdisplayLmBoundary(map);\r\n\t\t\t\tfitWardBoundary(map, lmBoundary);\r\n\t\t\t\tsetErfsContext({\r\n\t\t\t\t\t...erfsContext,\r\n\t\t\t\t\tward: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfitWardBoundary(map, selection?.wardBoundary, selection?.ward);\r\n\t\t\t\tsetErfsContext({\r\n\t\t\t\t\t...erfsContext,\r\n\t\t\t\t\tward: Number(selection?.ward),\r\n\t\t\t\t});\r\n\t\t\t\tmap?.data?.loadGeoJson(selection?.erfBoundary);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(`Error in MapLmWardBoundaries : `, error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MapControl\r\n\t\t\tposition={ControlPosition.TOP_LEFT}\r\n\t\t\tstyle={{ margin: \"1.6rem\" }}\r\n\t\t>\r\n\t\t\t<div className=\"map-lm-ward-boundaries\">\r\n\t\t\t\t<select\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t// value={selectedWard}\r\n\t\t\t\t\tclassName=\"map-control-select\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<option key={\"All Wards\"} value={\"All Wards\"}>\r\n\t\t\t\t\t\t{\"All Wards\"}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{lmWardBoundaries &&\r\n\t\t\t\t\t\tlmWardBoundaries?.map((option) => {\r\n\t\t\t\t\t\t\t// console.log(`option`, option);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<option key={option?.ward} value={option?.ward}>\r\n\t\t\t\t\t\t\t\t\t{option?.ward}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</MapControl>\r\n\t);\r\n};\r\n\r\nexport default MapLmWardBoundaries;\r\n","import { useMap } from \"@vis.gl/react-google-maps\";\nimport { useEffect } from \"react\";\n\n// hooks\nimport useIrepsMap from \"@/hooks/useIrepsMap\";\n\nconst MapLmBoundary = () => {\n\t// console.log(`props`, props)\n\n\t// const { center } = props;\n\n\t// get map object\n\tconst map = useMap();\n\t// const map = mapRef.current;\n\t// console.log(`map`, map);\n\n\tconst { displayLmBoundary, state } = useIrepsMap();\n\t// console.log(`displayLmBoundary`, displayLmBoundary);\n\n\tconst { lmBoundary } = state;\n\n\t// Display lm boundary\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tdisplayLmBoundary(map);\n\t\t// return map.data.forEach((feature) => map.data.remove(feature));\n\t}, [lmBoundary]);\n\n\treturn null;\n\n\t// return <div className=\"map-boundaries\"></div>;\n};\n\nexport default MapLmBoundary;\n","// npm libraries\nimport { useCallback } from \"react\";\nimport { AdvancedMarker } from \"@vis.gl/react-google-maps\";\n\n// css\nimport \"@/components/maps/ErfMarker.css\";\n\n/**\n * Wrapper Component for an AdvancedMarker for a single erf.\n */\nexport const ErfMarker = (props) => {\n\tconst { erf, onClick, setMarkerRef } = props;\n\n\tconst handleClick = useCallback(() => onClick(erf), [onClick, erf]);\n\tconst ref = useCallback(\n\t\t(marker) => setMarkerRef(marker, erf.id),\n\t\t[setMarkerRef, erf?.id]\n\t);\n\tconst { asts } = erf;\n\tconst astTotal = asts?.length || \"\";\n\n\treturn (\n\t\t<AdvancedMarker\n\t\t\tposition={{\n\t\t\t\tlat: erf?.address?.gps?.latitude,\n\t\t\t\tlng: erf?.address?.gps?.longitude,\n\t\t\t}}\n\t\t\tref={ref}\n\t\t\t// onClick={handleClick}\n\t\t>\n\t\t\t{/* <span className=\"marker-clustering-erf\">ðŸŒ³</span> */}\n\t\t\t{astTotal && <button className=\"erf-asts\">{astTotal}</button>}\n\t\t\t<button className=\"erf-no-btn\">\n\t\t\t\t<span className=\"erf-no\">{erf?.erfNo}</span>\n\t\t\t</button>\n\t\t</AdvancedMarker>\n\t);\n};\n","// npm library\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\nimport { InfoWindow, useMap } from \"@vis.gl/react-google-maps\";\r\n\r\n// css\r\nimport \"@/components/maps/ClusteredErfMarkers.css\";\r\n\r\n// context\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\n\r\n// components\r\nimport { ErfMarker } from \"@/components/maps/ErfMarker\";\r\nimport FormErf from \"@/components/forms/formErf/FormErf\";\r\n\r\n/**\r\n * The ClusterederfMarkers component is responsible for integrating the\r\n * markers with the markerclusterer.\r\n */\r\nexport const ClusteredErfMarkers = () => {\r\n\tconst { erfsContext, setErfsContext } = useContext(ErfsContext);\r\n\t// console.log(`erfsContext`, erfsContext);\r\n\r\n\tconst { erfs: landParcels, ward } = useMemo(() => erfsContext, [erfsContext]);\r\n\t// console.log(`landParcels`, landParcels);\r\n\t// console.log(`ward`, ward);\r\n\r\n\tconst erfs =\r\n\t\tlandParcels &&\r\n\t\tlandParcels?.filter((erf) => Number(erf?.address?.ward) === Number(ward));\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\tconst [markers, setMarkers] = useState({});\r\n\tconst [selectedErfKey, setSelectedErfKey] = useState(null);\r\n\t// console.log(`selectedErfKey`, selectedErfKey)\r\n\r\n\tconst selectedErf = useMemo(\r\n\t\t() =>\r\n\t\t\terfs && selectedErfKey\r\n\t\t\t\t? erfs.find((erf) => erf.id === selectedErfKey)\r\n\t\t\t\t: null,\r\n\t\t[erfs, selectedErfKey]\r\n\t);\r\n\t// console.log(`selectedErf`, selectedErf);\r\n\r\n\t// create the markerClusterer once the map is available and update it when\r\n\t// the markers are changed\r\n\tconst map = useMap();\r\n\tconst clusterer = useMemo(() => {\r\n\t\tif (!map) return null;\r\n\r\n\t\treturn new MarkerClusterer({ map, zoom: 10 });\r\n\t}, [map]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`ClusteredErfMarkers Mounting `);\r\n\t\treturn () => {\r\n\t\t\t// console.log(`ClusteredErfMarkers unmounting `);\r\n\t\t\tsetErfsContext({\r\n\t\t\t\t...erfsContext,\r\n\t\t\t\tward: null,\r\n\t\t\t});\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!clusterer) return;\r\n\r\n\t\ttry {\r\n\t\t\tclusterer?.clearMarkers();\r\n\t\t\tclusterer?.addMarkers(Object?.values(markers));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(`Error in ClusteredErfMarkers: `, error.message);\r\n\t\t}\r\n\t}, [clusterer, markers]);\r\n\r\n\t// this callback will effectively get passed as ref to the markers to keep\r\n\t// tracks of markers currently on the map\r\n\tconst setMarkerRef = useCallback((marker, key) => {\r\n\t\tsetMarkers((markers) => {\r\n\t\t\tif ((marker && markers[key]) || (!marker && !markers[key]))\r\n\t\t\t\treturn markers;\r\n\r\n\t\t\tif (marker) {\r\n\t\t\t\treturn { ...markers, [key]: marker };\r\n\t\t\t} else {\r\n\t\t\t\tconst { [key]: _, ...newMarkers } = markers;\r\n\t\t\t\t// console.log(`newMarkers`, newMarkers);\r\n\t\t\t\treturn newMarkers;\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"clustered-erf-markers\">\r\n\t\t\t{erfs.map((erf, index) => {\r\n\t\t\t\t// console.log(`index `,index)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ErfMarker\r\n\t\t\t\t\t\tkey={erf.id}\r\n\t\t\t\t\t\terf={erf}\r\n\t\t\t\t\t\t// onClick={(erf) => setSelectedErfKey(erf.id)}\r\n\t\t\t\t\t\tsetMarkerRef={setMarkerRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\r\n\t\t\t{selectedErfKey && (\r\n\t\t\t\t<InfoWindow\r\n\t\t\t\t\tanchor={markers[selectedErfKey]}\r\n\t\t\t\t\t// onCloseClick={() => setSelectedErfKey(null)}\r\n\t\t\t\t\t// zIndex={100000}\r\n\t\t\t\t\tdisableAutoPan={true}\r\n\t\t\t\t\theaderDisabled={true}\r\n\t\t\t\t\t// disableAutoPan={true}\r\n\t\t\t\t\t// style={{\r\n\t\t\t\t\t// \tzIndex: 100000,\r\n\t\t\t\t\t// }}\r\n\t\t\t\t\tmaxWidth={\"100vw\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"iw-erf-form\">\r\n\t\t\t\t\t\t<FormErf\r\n\t\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\t\tdata: selectedErf,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfoWindow>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","// npm libraries\nimport { useCallback } from \"react\";\nimport { AdvancedMarker } from \"@vis.gl/react-google-maps\";\n\n// css\nimport \"@/components/maps/AstMarker.css\";\n\n/**\n * Wrapper Component for an AdvancedMarker for a single ast.\n */\nexport const AstMarker = (props) => {\n\tconst { ast, onClick, setMarkerRef } = props;\n\n\tconst { lat, lng } = ast?.location?.gps;\n\n\tconst handleClick = useCallback(() => onClick(ast), [onClick, ast]);\n\n\tconst ref = useCallback(\n\t\t(marker) => {\n\t\t\tif (setMarkerRef) {\n\t\t\t\treturn setMarkerRef(marker, ast.id);\n\t\t\t}\n\t\t},\n\t\t[setMarkerRef, ast.id]\n\t);\n\tconst { trns } = ast;\n\tconst totalTrns = trns?.length || \"\";\n\n\treturn (\n\t\t<AdvancedMarker\n\t\t\tposition={{\n\t\t\t\tlat: Number(lat),\n\t\t\t\tlng: Number(lng),\n\t\t\t}}\n\t\t\tref={ref}\n\t\t\t// onClick={handleClick}\n\t\t>\n\t\t\t{/* <span className=\"marker-clustering-ast\">ðŸŒ³</span> */}\n\t\t\t{totalTrns && <button className=\"ast-asts\">{totalTrns}</button>}\n\t\t\t<button className=\"ast-no-btn\">\n\t\t\t\t<span className=\"ast-no\">{ast?.astData?.astNo}</span>\n\t\t\t</button>\n\t\t</AdvancedMarker>\n\t);\n};\n","// npm library\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\nimport { InfoWindow, useMap } from \"@vis.gl/react-google-maps\";\r\n\r\n// context\r\nimport { AstsContext } from \"@/contexts/AstsContext\";\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\n\r\n// components\r\nimport { AstMarker } from \"@/components/maps/AstMarker\";\r\nimport AstsActivity from \"@/components/asts/astsActivity/AstsActivity\";\r\n\r\n/**\r\n * The ClusteredAstMarkers component is responsible for integrating the\r\n * markers with the markerclusterer.\r\n */\r\nexport const ClusteredAstMarkers = (props) => {\r\n\tconst { asts: meters } = props;\r\n\t// console.log(`meters`, meters);\r\n\r\n\t// const { astsContext } = useContext(AstsContext);\r\n\t// console.log(`astsContext`, astsContext)\r\n\r\n\tconst { erfsContext } = useContext(ErfsContext);\r\n\t// console.log(`erfsContext`, erfsContext);\r\n\r\n\tconst { ward } = useMemo(() => erfsContext, [erfsContext]);\r\n\t// console.log(`landParcels`, landParcels);\r\n\t// console.log(`ward`, ward);\r\n\r\n\tconst asts = meters?.filter(\r\n\t\t(erf) => Number(erf?.erf?.address?.ward) === Number(ward)\r\n\t);\r\n\t// console.log(`asts`, asts);\r\n\r\n\t// const asts = useMemo(() => astsContext?.asts, [astsContext?.asts]);\r\n\r\n\tconst [markers, setMarkers] = useState({});\r\n\tconst [selectedAstKey, setSelectedAstKey] = useState(null);\r\n\t// console.log(`selectedAstKey`, selectedAstKey)\r\n\r\n\tconst selectedAst = useMemo(\r\n\t\t() =>\r\n\t\t\tasts && selectedAstKey\r\n\t\t\t\t? asts.find((ast) => ast.id === selectedAstKey)\r\n\t\t\t\t: null,\r\n\t\t[asts, selectedAstKey]\r\n\t);\r\n\t// console.log(`selectedAst`, selectedAst);\r\n\r\n\t// create the markerClusterer once the map is available and update it when\r\n\t// the markers are changed\r\n\tconst map = useMap();\r\n\tconst clusterer = useMemo(() => {\r\n\t\tif (!map) return null;\r\n\r\n\t\treturn new MarkerClusterer({ map, zoom: 10 });\r\n\t}, [map]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!clusterer) return;\r\n\r\n\t\ttry {\r\n\t\t\tclusterer.clearMarkers();\r\n\t\t\tclusterer.addMarkers(Object.values(markers));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(`Error in ClusteredAstMarkers: `, error.message);\r\n\t\t}\r\n\t}, [clusterer, markers]);\r\n\r\n\t// this callback will effectively get passsed as ref to the markers to keep\r\n\t// tracks of markers currently on the map\r\n\tconst setMarkerRef = useCallback((marker, key) => {\r\n\t\tsetMarkers((markers) => {\r\n\t\t\tif ((marker && markers[key]) || (!marker && !markers[key]))\r\n\t\t\t\treturn markers;\r\n\r\n\t\t\tif (marker) {\r\n\t\t\t\treturn { ...markers, [key]: marker };\r\n\t\t\t} else {\r\n\t\t\t\tconst { [key]: _, ...newMarkers } = markers;\r\n\t\t\t\t// console.log(`newMarkers`, newMarkers);\r\n\t\t\t\treturn newMarkers;\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{asts?.map((ast, index) => {\r\n\t\t\t\t// console.log('index' , index)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<AstMarker\r\n\t\t\t\t\t\tkey={ast.id}\r\n\t\t\t\t\t\tast={ast}\r\n\t\t\t\t\t\t// onClick={(ast) => setSelectedAstKey(ast?.id)}\r\n\t\t\t\t\t\tsetMarkerRef={setMarkerRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\r\n\t\t\t{selectedAstKey && (\r\n\t\t\t\t<InfoWindow\r\n\t\t\t\t\tanchor={markers[selectedAstKey]}\r\n\t\t\t\t\t// onCloseClick={() => setSelectedAstKey(null)}\r\n\t\t\t\t\tonClose={() => setSelectedAstKey(null)}\r\n\t\t\t\t\theaderContent={`Meter No: ${selectedAst?.astData?.astNo}`}\r\n\t\t\t\t\theaderDisabled={true}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<AstsActivity\r\n\t\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\t\tdata: selectedAst,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfoWindow>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","// npm libraries\r\nimport { useContext, useMemo } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n// css\r\nimport \"@/components/maps/MapAstFilter.css\";\r\n\r\n// hooks\r\nimport { useMap, MapControl, ControlPosition } from \"@vis.gl/react-google-maps\";\r\n\r\n// contexts\r\nimport { AstsContext } from \"@/contexts/AstsContext\";\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\n\r\n// images\r\nimport meter14 from \"@/images/meter14.jpg\";\r\n\r\nconst MapAstFilter = (props) => {\r\n\t// console.log(`MapAstFilter`)\r\n\tconst { asts: meters } = props;\r\n\t// console.log(`meters`, meters);\r\n\r\n\tconst { erfsContext } = useContext(ErfsContext);\r\n\t// console.log(`erfsContext`, erfsContext);\r\n\r\n\tconst { ward } = useMemo(() => erfsContext, [erfsContext]);\r\n\t// console.log(`landParcels`, landParcels);\r\n\t// console.log(`ward`, ward);\r\n\r\n\tconst asts = meters?.filter(\r\n\t\t(erf) => Number(erf?.erf?.address?.ward) === Number(ward)\r\n\t);\r\n\t// console.log(`asts`, asts);\r\n\r\n\tconst map = useMap();\r\n\t// console.log(`map`, map);\r\n\r\n\t// const { astsContext } = useContext(AstsContext);\r\n\t// console.log(`astsContext`, astsContext);\r\n\r\n\t// const {asts} = astsContext\r\n\t// const asts = useMemo(() => {\r\n\t// \treturn astsContext?.asts;\r\n\t// }, [assests]);\r\n\t// console.log(`asts`, asts);\r\n\r\n\tconst options =\r\n\t\tasts &&\r\n\t\tasts?.map((ast) => {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: ast?.astData?.astNo,\r\n\t\t\t\tlabel: ast?.astData?.astNo,\r\n\t\t\t\tdata: ast,\r\n\t\t\t};\r\n\t\t});\r\n\t// console.log(`options`, options);\r\n\r\n\tconst setSelectedOption = (selection) => {\r\n\t\t// console.log(`selection`, selection);\r\n\t\tif (!map) return;\r\n\t\tif (!selection) return;\r\n\t\tmap.panTo({\r\n\t\t\tlat: Number(selection.data?.location?.gps?.lat),\r\n\t\t\tlng: Number(selection.data?.location?.gps?.lng),\r\n\t\t});\r\n\t\tmap.setZoom(20);\r\n\t};\r\n\r\n\tconst clearValue = (e) => {\r\n\t\t// console.log(`clearing selected value`, e);\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst customStyles = {\r\n\t\tcontrol: (provided) => ({\r\n\t\t\t...provided,\r\n\t\t\tbackgroundColor: \"lightgray\",\r\n\t\t\tpadding: \"0.11rem\",\r\n\t\t\t// border: \"1px solid black\",\r\n\t\t\t// boxShadow: \"0 2px 4px rgba(0,0,0,.2)\",\r\n\t\t}),\r\n\t\toption: (provided, state) => ({\r\n\t\t\t...provided,\r\n\t\t\tborderBottom: \"1px dotted pink\",\r\n\t\t\tcolor: state.isSelected ? \"white\" : \"black\",\r\n\t\t\tbackgroundColor: state.isSelected ? \"hotpink\" : \"white\",\r\n\t\t}),\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MapControl\r\n\t\t\tposition={ControlPosition.LEFT_TOP}\r\n\t\t\tstyle={{ margin: \"1.6rem\" }}\r\n\t\t>\r\n\t\t\t<div className=\"map-ast-filter\">\r\n\t\t\t\t<div className=\"maf\">\r\n\t\t\t\t\t<h2>Mn</h2>\r\n\t\t\t\t\t{/* <img src={meter14} alt=\"electricity meter\" /> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={\"Meter No\"}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tisClearable={true}\r\n\t\t\t\t\tonChange={setSelectedOption}\r\n\t\t\t\t\tclearValue={clearValue}\r\n\t\t\t\t\tstyles={customStyles}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</MapControl>\r\n\t);\r\n};\r\n\r\nexport default MapAstFilter;\r\n","// npm libraries\r\nimport { useContext, useMemo } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n// css\r\nimport \"@/components/maps/MapErfFilter.css\";\r\n\r\n// hooks\r\nimport { useMap, MapControl, ControlPosition } from \"@vis.gl/react-google-maps\";\r\n\r\n// contexts\r\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\r\n\r\n// images\r\n// import house1 from \"@/images/house1.png\";\r\n\r\nconst MapErfFilter = () => {\r\n\t// console.log(`MapErfFilter`)\r\n\r\n\tconst map = useMap();\r\n\t// console.log(`map`, map);\r\n\r\n\tconst { erfsContext } = useContext(ErfsContext);\r\n\t// console.log(`erfsContext`, erfsContext);\r\n\r\n\tconst { erfs: landParcels, ward } = useMemo(() => erfsContext, [erfsContext]);\r\n\t// console.log(`landParcels`, landParcels);\r\n\t// console.log(`ward`, ward);\r\n\r\n\tconst erfs =\r\n\t\tlandParcels &&\r\n\t\tlandParcels?.filter((erf) => Number(erf?.address?.ward) === Number(ward));\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\t// const {erfs} = erfsContext\r\n\t// const erfs = useMemo(() => {\r\n\t// \treturn erfsContext?.erfs;\r\n\t// }, [erfsContext]);\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\tconst options =\r\n\t\terfs &&\r\n\t\terfs.map((erf) => {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: erf.erfNo,\r\n\t\t\t\tlabel: erf.erfNo,\r\n\t\t\t\tdata: erf,\r\n\t\t\t};\r\n\t\t});\r\n\t// console.log(`options`, options);\r\n\r\n\tconst setSelectedOption = (selection) => {\r\n\t\t// console.log(`selection`, selection);\r\n\t\tif (!map) return;\r\n\t\tif (!selection) return;\r\n\t\tmap.panTo({\r\n\t\t\tlat: Number(selection.data?.address?.gps?.latitude),\r\n\t\t\tlng: Number(selection.data?.address?.gps?.longitude),\r\n\t\t});\r\n\t\tmap.setZoom(20);\r\n\t};\r\n\r\n\tconst clearValue = (e) => {\r\n\t\tconsole.log(`clearing selected value`, e);\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst customStyles = {\r\n\t\tcontrol: (provided) => ({\r\n\t\t\t...provided,\r\n\t\t\tbackgroundColor: \"lightgray\",\r\n\t\t\tpadding: \"0.15rem\",\r\n\t\t\t// border: \"1px solid black\",\r\n\t\t\t// boxShadow: \"0 2px 4px rgba(0,0,0,.2)\",\r\n\t\t}),\r\n\t\toption: (provided, state) => ({\r\n\t\t\t...provided,\r\n\t\t\tborderBottom: \"1px dotted pink\",\r\n\t\t\tcolor: state.isSelected ? \"white\" : \"black\",\r\n\t\t\tbackgroundColor: state.isSelected ? \"hotpink\" : \"white\",\r\n\t\t}),\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MapControl\r\n\t\t\tposition={ControlPosition.LEFT_TOP}\r\n\t\t\tstyle={{ margin: \"1.6rem\" }}\r\n\t\t>\r\n\t\t\t<div className=\"map-erf-filter\">\r\n\t\t\t\t<div className=\"mef\">\r\n\t\t\t\t\t{/* <img src={house1} alt=\"erf\" /> */}\r\n\t\t\t\t\t<h2>Erf</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={\"Erf No\"}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tisClearable={true}\r\n\t\t\t\t\tonChange={setSelectedOption}\r\n\t\t\t\t\tclearValue={clearValue}\r\n\t\t\t\t\tstyles={customStyles}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</MapControl>\r\n\t);\r\n};\r\n\r\nexport default MapErfFilter;\r\n","// npm libraries\nimport { useContext, useMemo } from \"react\";\n\n// css\nimport \"@/components/map/MapMain.css\";\n\n// contexts\nimport { ErfsContext } from \"@/contexts/ErfsContext\";\n\n// components\nimport MapIrepsMap from \"@/components/maps/MapIrepsMap\";\nimport MapLmWardBoundaries from \"@/components/maps/MapLmWardBoundaries\";\nimport MapLmBoundary from \"@/components/maps/MapLmBoundary\";\nimport { ClusteredErfMarkers } from \"../maps/ClusteredErfMarkers\";\nimport { ClusteredAstMarkers } from \"@/components/maps/ClusteredAstMarkers\";\nimport MapAstFilter from \"@/components/maps/MapAstFilter\";\nimport MapErfFilter from \"@/components/maps/MapErfFilter\";\n\nconst MapMain = (props) => {\n\t// console.log(`ErfsMap props`, props);\n\tconst { asts, astsTableFields } = props;\n\n\tconst { erfsContext } = useContext(ErfsContext);\n\t// console.log(`erfsContext`, erfsContext);\n\n\tconst { ward } = useMemo(() => erfsContext, [erfsContext]);\n\t// console.log(`ward`, ward);\n\n\treturn (\n\t\t<div className=\"map-main\">\n\t\t\t<MapIrepsMap>\n\t\t\t\t<MapLmBoundary />\n\t\t\t\t<MapLmWardBoundaries />\n\t\t\t\t<ClusteredAstMarkers asts={asts} astsTableFields={astsTableFields} />\n\t\t\t\t<ClusteredErfMarkers />\n\n\t\t\t\t{ward ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<MapAstFilter asts={asts} astsTableFields={astsTableFields} />\n\t\t\t\t\t\t<MapErfFilter />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</MapIrepsMap>\n\t\t</div>\n\t);\n};\n\nexport default MapMain;\n","// import { useCallback, useContext } from \"react\";\r\n\r\n// css\r\nimport \"@/components/map/MapHeader.css\";\r\n\r\n// hooks\r\nimport { useUser } from \"@/hooks/useUser\";\r\nimport useAuthContext from \"@/hooks/useAuthContext\";\r\n\r\n// components\r\n// import { ErfsContext } from \"@/contexts/ErfsContext\";\r\nimport PageTitle from \"@/pages/PageTitle\";\r\n// import FilterBtn from \"@/components/filters/FilterBtn\";\r\n// import BtnPageHeaderBtn from \"@/components/buttons/BtnPageHeaderBtn\";\r\n\r\nconst MapHeader = (props) => {\r\n\t// props\r\n\tconst { phLl } = props;\r\n\r\n\tconst { user } = useAuthContext();\r\n\t// console.log(`user`, user);\r\n\r\n\tconst { userFromUsers } = useUser(user?.uid);\r\n\t// console.log(`userFromUsers`, userFromUsers);\r\n\r\n\t// context\r\n\t// const { setErfsContext } = useContext(ErfsContext);\r\n\r\n\t// handle event - active tab\r\n\t// const handleActiveTab = useCallback( (e) => {\r\n\t// \t// console.log(`e.target.id`, e.target.id);\r\n\t// \tsetErfsContext((prev) => {\r\n\t// \t\treturn {\r\n\t// \t\t\t...prev,\r\n\t// \t\t\tactiveTab: e.target.id,\r\n\t// \t\t};\r\n\t// \t})\r\n\t// },[setErfsContext])\r\n\r\n\treturn (\r\n\t\t<div className=\"map-header\">\r\n\t\t\t<div className=\"ph ph-left\">\r\n\t\t\t\t<div className=\"phLl\">\r\n\t\t\t\t\t{/* <FilterBtn /> */}\r\n\t\t\t\t\t<PageTitle title={phLl} />\r\n\t\t\t\t\t<PageTitle title={userFromUsers.workbase} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"ph ph-right\">\r\n\t\t\t\t<div className=\"phRl\"></div>\r\n\t\t\t\t<div className=\"phRr\">\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"table\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"split\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* <BtnPageHeaderBtn\r\n\t\t\t\t\t\thandleClick={handleActiveTab}\r\n\t\t\t\t\t\ttabName=\"map\"\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapHeader;\r\n","// npm imports\nimport { useCallback } from \"react\";\n\n// css\nimport \"@/pages/map/Map.css\";\n\n// hooks\nimport { useAstsMap } from \"@/hooks/useAstsMap.jsx\";\nimport { useErfs } from \"@/hooks/useErfs.jsx\";\n\n// components\nimport MapMain from \"@/components/map/MapMain\";\nimport MapHeader from \"@/components/map/MapHeader\";\n\nconst Map = () => {\n\t// console.log(`Map is running`)\n\n\tuseErfs();\n\tconst { asts, astsTableFields, error } = useAstsMap();\n\t// console.log(`asts`, asts);\n\t// console.log(`astsTableFields`, astsTableFields);\n\t// console.log(`error`, error);\n\n\treturn (\n\t\t<div className=\"map\">\n\t\t\t<MapHeader phLl=\"Map\" />\n\t\t\t<div className=\"map-body\">\n\t\t\t\t<MapMain asts={asts} astsTableFields={astsTableFields} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Map;\n"],"names":["MapLmWardBoundaries","erfsContext","setErfsContext","useContext","ErfsContext","map","useMap","displayLMWardBoundaries","state","fitWardBoundary","displayLmBoundary","useIrepsMap","lmWardBoundaries","lmBoundary","useEffect","handleChange","e","selectedWard","_a","selection","wardBoundary","feature","_b","error","jsx","MapControl","ControlPosition","jsxs","option","MapLmBoundary","ErfMarker","props","erf","onClick","setMarkerRef","useCallback","ref","marker","asts","astTotal","AdvancedMarker","_d","_c","ClusteredErfMarkers","landParcels","ward","useMemo","erfs","markers","setMarkers","useState","selectedErfKey","setSelectedErfKey","selectedErf","clusterer","MarkerClusterer","key","_","newMarkers","index","InfoWindow","FormErf","AstMarker","ast","lat","lng","trns","totalTrns","ClusteredAstMarkers","meters","selectedAstKey","setSelectedAstKey","selectedAst","Fragment","AstsActivity","MapAstFilter","options","setSelectedOption","_f","_e","clearValue","customStyles","provided","Select","MapErfFilter","MapMain","astsTableFields","MapIrepsMap","MapHeader","phLl","user","useAuthContext","userFromUsers","useUser","PageTitle","Map","useErfs","useAstsMap"],"mappings":"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"}