{"version":3,"file":"IwTrnsOnAst-Bml8mUIF.js","sources":["../../src/components/tables/TableTrnsOnAst.jsx","../../src/components/irepsInfoWindow/IwTrnsOnAst.jsx"],"sourcesContent":["import { useMemo } from \"react\";\n\nimport \"@/components/tables/Table.css\";\nimport \"@/components/tables/TableTrnsOnAst.css\";\n\nimport { TableCustomNoRowsOverlay } from \"@/components/tables/TableCustomNoRowsOverlay\";\n\n// ag grid\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { AgGridReact } from \"@ag-grid-community/react\";\nimport \"@ag-grid-community/styles/ag-grid.css\";\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nModuleRegistry.registerModules([ClientSideRowModelModule]);\n\nconst TableTrnsOnAst = props => {\n\t// console.log(`TableTrnsOnAst props`, props);\n\tconst { rowData, colDefs } = props;\n\n\tconst defaultColDef = useMemo(\n\t\t() => ({\n\t\t\tsortable: true,\n\t\t\tfilter: true,\n\t\t\tresizable: true,\n\t\t\tfloatingFilter: true,\n\t\t\tsuppressMovable: true,\n\t\t\t// flex: 1,\n\t\t}),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<div className=\"ag-theme-quartz table table-trns-on-ast\">\n\t\t\t<AgGridReact\n\t\t\t\trowData={rowData}\n\t\t\t\tcolumnDefs={colDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\tpagination={true}\n\t\t\t\tnoRowsOverlayComponent={TableCustomNoRowsOverlay}\n\t\t\t\treactiveCustomComponents\n\t\t\t\tdomLayout={\"autoHeight\"}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default TableTrnsOnAst;\n","// css\nimport \"@/components/irepsInfoWindow/IwTrnsOnAst.css\";\n\n// custome hooks\nimport useModal from \"@/hooks/useModal.jsx\";\n\n// components\nimport TableTrnsOnAst from \"@/components/tables/TableTrnsOnAst\";\nimport TableDate from \"@/components/tables/TableDate\";\nimport IrepsInfoWindow from \"@/components/irepsInfoWindow/IrepsInfoWindow\";\nimport { irepsConstants } from \"@/utils/utils\";\n\nconst IwTrnsOnAst = props => {\n\t// console.log(`IwTrnsOnAst props`, props);\n\n\tconst { trns, erf, id, astData } = props.data?.data;\n\t// console.log(`trns`, trns);\n\n\t// retrieve astNo from astData\n\tconst { astNo } = astData;\n\n\t// retrieve erfNo from erf\n\tconst  erfNo = erf?.erfNo;\n\n\tconst { openModal } = useModal();\n\n\tconst trnsOnAstTableFields = [\n\t\t{\n\t\t\tfield: \"trnType\",\n\t\t\theaderName: \"Trn Type\",\n\t\t\t// width: 150,\n\t\t\tflex: 0.2,\n\t\t},\n\t\t{\n\t\t\tfield: \"updatedByUser\",\n\t\t\theaderName: \"Updated By\",\n\t\t\t// width: 150,\n\t\t\tflex: 0.3,\n\t\t},\n\t\t{\n\t\t\tfield: \"updatedAtDatetime\",\n\t\t\theaderName: \"Updated At Datetime\",\n\t\t\tcellRenderer: params => {\n\t\t\t\t// console.log(`params`, params);\n\t\t\t\tconst newDate = params.value.toDate();\n\t\t\t\treturn (\n\t\t\t\t\t<TableDate date={newDate} dateFormat={irepsConstants.IC_DATE_FORMAT1} />\n\t\t\t\t);\n\t\t\t},\n\t\t\tvalueGetter: params => {\n\t\t\t\t// console.log(`params`, params);\n\t\t\t\treturn params.data.updatedAtDatetime;\n\t\t\t},\n\t\t\t// width: 190,\n\t\t\tflex: 0.4,\n\t\t},\n\t];\n\n\tconst handlePossibleTrns = e => {\n\t\t// console.log(`open Possible trns modal - e : `, e);\n\t\topenModal({\n\t\t\tmodalName: \"iwPossibleAstTrnsOnAst\",\n\t\t\tpayload: {\n\t\t\t\terfNo,\n\t\t\t\terfId: id,\n\t\t\t\tastNo,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"iw-trns-on-ast\">\n\t\t\t<IrepsInfoWindow\n\t\t\t\thl1={\"Trns On Ast\"}\n\t\t\t\thl2={\n\t\t\t\t\t<span>\n\t\t\t\t\t\tAst: <span className=\"text-emphasis2\">{astNo}</span>\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t\thr2={<span>Erf: {<span className=\"text-emphasis2\">{erfNo}</span>}</span>}\n\t\t\t\t// hr1={<button onClick={handlePossibleTrns}>Trn</button>}\n\t\t\t\thr1={\n\t\t\t\t\t<span>Trns: {<span className=\"text-emphasis2\">{trns?.length}</span>}</span>\n\t\t\t\t}\n\t\t\t\twindowWidth=\"35rem\"\n\t\t\t\twindowHeight=\"35rem\"\n\t\t\t\theaderType=\"headerType3\"\n\t\t\t>\n\t\t\t\t<TableTrnsOnAst rowData={trns} colDefs={trnsOnAstTableFields} />\n\t\t\t</IrepsInfoWindow>\n\t\t</div>\n\t);\n};\n\nexport default IwTrnsOnAst;\n"],"names":["ModuleRegistry","ClientSideRowModelModule","TableTrnsOnAst","props","rowData","colDefs","defaultColDef","useMemo","jsx","AgGridReact","TableCustomNoRowsOverlay","IwTrnsOnAst","trns","erf","id","astData","_a","astNo","erfNo","useModal","trnsOnAstTableFields","params","newDate","TableDate","irepsConstants","IrepsInfoWindow"],"mappings":"kgBAaAA,EAAe,gBAAgB,CAACC,CAAwB,CAAC,EAEzD,MAAMC,EAA0BC,GAAA,CAEzB,KAAA,CAAE,QAAAC,EAAS,QAAAC,CAAY,EAAAF,EAEvBG,EAAgBC,EAAA,QACrB,KAAO,CACN,SAAU,GACV,OAAQ,GACR,UAAW,GACX,eAAgB,GAChB,gBAAiB,EAAA,GAGlB,CAAC,CAAA,EAID,OAAAC,EAAAA,IAAC,MAAI,CAAA,UAAU,0CACd,SAAAA,EAAA,IAACC,EAAA,CACA,QAAAL,EACA,WAAYC,EACZ,cAAAC,EACA,WAAY,GACZ,uBAAwBI,EACxB,yBAAwB,GACxB,UAAW,YAAA,CAEb,CAAA,CAAA,CAEF,EChCMC,EAAuBR,GAAA,OAG5B,KAAM,CAAE,KAAAS,EAAM,IAAAC,EAAK,GAAAC,EAAI,QAAAC,CAAQ,GAAIC,EAAAb,EAAM,OAAN,YAAAa,EAAY,KAIzC,CAAE,MAAAC,CAAU,EAAAF,EAGXG,EAAQL,GAAA,YAAAA,EAAK,MAEEM,EAAS,EAE/B,MAAMC,EAAuB,CAC5B,CACC,MAAO,UACP,WAAY,WAEZ,KAAM,EACP,EACA,CACC,MAAO,gBACP,WAAY,aAEZ,KAAM,EACP,EACA,CACC,MAAO,oBACP,WAAY,sBACZ,aAAwBC,GAAA,CAEjB,MAAAC,EAAUD,EAAO,MAAM,OAAO,EACpC,aACEE,EAAU,CAAA,KAAMD,EAAS,WAAYE,EAAe,eAAiB,CAAA,CAExE,EACA,YAAuBH,GAEfA,EAAO,KAAK,kBAGpB,KAAM,EACP,CAAA,EAgBA,OAAAb,EAAAA,IAAC,MAAI,CAAA,UAAU,iBACd,SAAAA,EAAA,IAACiB,EAAA,CACA,IAAK,cACL,WACE,OAAK,CAAA,SAAA,CAAA,QACCjB,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAkB,SAAMS,EAAA,CAAA,EAC9C,EAED,WAAM,OAAK,CAAA,SAAA,CAAA,QAAOT,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAkB,SAAMU,EAAA,CAAA,EAAQ,EAEjE,WACE,OAAK,CAAA,SAAA,CAAA,SAAQV,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAkB,0BAAM,OAAO,CAAA,EAAQ,EAErE,YAAY,QACZ,aAAa,QACb,WAAW,cAEX,SAACA,EAAA,IAAAN,EAAA,CAAe,QAASU,EAAM,QAASQ,EAAsB,CAAA,CAEhE,CAAA,CAAA,CAEF"}