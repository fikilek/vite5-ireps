import{h as k,r as G,A as de,i as se,u as ne,w as ee,q as le,e as oe,o as ie,c as re,d as ce,f as me,k as ue,l as he,j as N,B as fe,m as ye,n as H,p as te,s as ae,t as O,I as pe,v as Ne}from"./index-CHax9ClH.js";import{u as Se}from"./useTrns-BD_hA0QA.js";import{T as De}from"./useErfs-ClThIGzt.js";try{let f=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},D=new f.Error().stack;D&&(f._sentryDebugIds=f._sentryDebugIds||{},f._sentryDebugIds[D]="79236c13-b528-42b2-a26c-d17dac832772",f._sentryDebugIdIdentifier="sentry-dbid-79236c13-b528-42b2-a26c-d17dac832772")}catch{}const ge=()=>({getAstsUsersStats:t=>{var s;const d={};t==null||t.forEach(a=>{d[a.metadata.createdByUid]=1+(d[a.metadata.createdByUid]||0)});const e=[];for(const a in d){const n=t==null?void 0:t.find(i=>{var m;return((m=i==null?void 0:i.metadata)==null?void 0:m.createdByUid)===a}),c=(d[a]/(t==null?void 0:t.length)*100).toFixed(2);e.push({uid:a,displayName:(s=n==null?void 0:n.metadata)==null?void 0:s.createdByUser,quantity:d[a],percentage:c,fillColor:k()})}return{stats:e,total:t==null?void 0:t.length}},getMeterTypePerUserStats:t=>{var i,m;const d=t.filter(l=>l.astData.meter.type==="pre-paid"),e={};d==null||d.forEach(l=>{e[l.metadata.createdByUid]=1+(e[l.metadata.createdByUid]||0)});const s=[];for(const l in e){const h=d==null?void 0:d.find(o=>{var u;return((u=o==null?void 0:o.metadata)==null?void 0:u.createdByUid)===l}),r=(e[l]/(d==null?void 0:d.length)*100).toFixed(2);s.push({uid:l,displayName:(i=h==null?void 0:h.metadata)==null?void 0:i.createdByUser,quantity:e[l],percentage:r,fillColor:k()})}const a=t.filter(l=>l.astData.meter.type==="conventional"),n={};a==null||a.forEach(l=>{n[l.metadata.createdByUid]=1+(n[l.metadata.createdByUid]||0)});const c=[];for(const l in n){const h=a==null?void 0:a.find(o=>{var u;return((u=o==null?void 0:o.metadata)==null?void 0:u.createdByUid)===l}),r=(n[l]/(a==null?void 0:a.length)*100).toFixed(2);c.push({uid:l,displayName:(m=h==null?void 0:h.metadata)==null?void 0:m.createdByUser,quantity:n[l],percentage:r,fillColor:k()})}return[{meterTypeName:"pre-paid",stats:s,total:d==null?void 0:d.length},{meterTypeName:"conventional",stats:c,total:a.length}]},getAnomalyPerUserStats:t=>{const d={};t==null||t.forEach(a=>{var n,c;d[(n=a==null?void 0:a.anomalies)==null?void 0:n.anomaly]=1+(d[(c=a==null?void 0:a.anomalies)==null?void 0:c.anomaly]||0)});const e=Object.entries(d);let s=[];return e==null||e.forEach(a=>{var h;const n=a[0],c=a[1],i=t==null?void 0:t.filter(r=>{var o;return((o=r==null?void 0:r.anomalies)==null?void 0:o.anomaly)===n}),m={};i==null||i.forEach(r=>{var o,u;m[(o=r==null?void 0:r.anomalies)==null?void 0:o.anomalyDetail]=1+(m[(u=r==null?void 0:r.anomalies)==null?void 0:u.anomalyDetail]||0)});const l=[];for(const r in m){const o=t==null?void 0:t.filter(y=>{var p;return((p=y==null?void 0:y.anomalies)==null?void 0:p.anomalyDetail)===r}),u={};o==null||o.forEach(y=>{u[y.metadata.createdByUid]=1+(u[y.metadata.createdByUid]||0)});const g=[];for(const y in u){const p=o==null?void 0:o.find(b=>{var M;return((M=b==null?void 0:b.metadata)==null?void 0:M.createdByUid)===y}),S=(u[y]/(t==null?void 0:t.length)*100).toFixed(2);g.push({uid:y,displayName:(h=p==null?void 0:p.metadata)==null?void 0:h.createdByUser,quantity:u[y],percentage:S,fillColor:k()})}l.push({anomalyDetailName:r,anomalyDetailStats:o.length,updatedUserStats:g})}s.push({anomalyName:n,anomalyStats:c,anomalyDetailStatsArray:l})}),{stats:s,total:t.length}}}),be=f=>{const{astsContext:D,setAstsContext:C}=G.useContext(de),{astsStatsContext:t,setAstsStatsContext:d}=G.useContext(se),[e,s]=G.useState([]),[a,n]=G.useState(""),{getDocument:c}=Se("users"),{user:i}=ne(),{getAstsUsersStats:m,getMeterTypePerUserStats:l,getAnomalyPerUserStats:h}=ge(),r=i==null?void 0:i.uid;return G.useEffect(()=>{c(r).then(o=>{const{workbase:u}=o==null?void 0:o.doc,g=ee("erf.address.lmMetro","==",u);if(!g)return;const y=le(re(ce,f),ie(g,ee("astData.astState.state","==","stores")),oe("metadata.updatedAtDatetime","desc"));n("");try{me(y,p=>{const S=[];p.docs.forEach(U=>{S.push({id:U.id,...U.data()})}),s(S);const b=m(S),M=l(S),B=h(S);C({...D,asts:S}),d(U=>({...U,statsAstsUsers:b,meterTypePerUserStats:M,anomalyPerUserStats:B}))},p=>{console.log("firestore err",p.message),n(p.message)}),n("")}catch(p){console.log("Error on useGetAstsCollection - getDocument",p.message)}})},[]),{asts:e,error:a}},Me=f=>{const{data:D}=f==null?void 0:f.data,{astNo:C,astId:t}=D==null?void 0:D.astData,{user:d}=ne(),{superuser:e}=d==null?void 0:d.claims,{deleteAst:s}=D,a=ue(),n=he(a,"actionDeleteAst"),c=i=>{const m=i.target.id,l=i.target.dataset.action;console.log("action",l),n({astId:m,action:l}).then(h=>{console.log("result",h),fe.success(`Ast [${C}] delete status updated to ${ye.get(l)}`,{position:"bottom-left"})}).catch(h=>{console.log("Error:",h.message)})};return N.jsx("div",{className:"table-delete-ast-btn",children:s!="deletePending"||s==="restored"?N.jsx("button",{className:"table-btn init-delete-btn",onClick:c,style:{},title:"Delete Ast",disabled:!1,"data-action":"initDelete",id:t,color:"red",children:"X"}):N.jsxs(N.Fragment,{children:[e?N.jsx("button",{className:"table-btn final-delete-btn",onClick:c,style:{},title:"Final Delete Ast",disabled:!1,"data-action":"finalDelete",id:t,children:N.jsx("p",{children:"FD"})}):"",N.jsx("button",{className:"table-btn un-delete-btn",onClick:c,style:{},title:"Undo Delete Ast",disabled:!1,"data-action":"reverseDelete",id:t,children:"RD"})]})})},x=(f,D)=>{const C=f==null?void 0:f.find(d=>(d==null?void 0:d.mediaCategory)===D);return C==null?void 0:C.url},xe=()=>{G.useContext(de);const{error:f}=be("asts");return{astsTableFields:[{field:"id",headerName:"System Id",width:200,hide:!0},{headerName:"Created",children:[{field:"metadata.createdByUser",columnGroupShow:"open",headerName:"Created By",width:150,hide:!1},{field:"metadata.createdByUser",columnGroupShow:"closed",headerName:"Created By",width:150,hide:!1},{field:"metadata.createdAtDatetime",columnGroupShow:"open",headerName:"Date Created",width:160,cellRenderer:t=>{var s,a;const d=new H((s=t==null?void 0:t.value)==null?void 0:s.seconds,(a=t==null?void 0:t.value)==null?void 0:a.nanoseconds),e=d==null?void 0:d.toDate();return N.jsx(ae,{date:e,dateFormat:"yyyy-MMM-dd HH:mm"})},valueGetter:t=>{var d,e;return(e=(d=t.data)==null?void 0:d.metadata)==null?void 0:e.createdAtDatetime},hide:!1}]},{headerName:"Last Updated",children:[{field:"metadata.updatedByUser",columnGroupShow:"open",headerName:"Updated By",width:150,hide:!1},{field:"metadata.updatedByUser",columnGroupShow:"closed",headerName:"Updated By",width:150,hide:!1},{field:"metadata.updatedAtDatetime",columnGroupShow:"open",headerName:"Date Updated",width:160,cellRenderer:t=>{const e=new H(t.value.seconds,t.value.nanoseconds).toDate();return N.jsx(ae,{date:e,dateFormat:"yyyy-MMM-dd HH:mm"})},valueGetter:t=>t.data.metadata.updatedAtDatetime,hide:!1},{field:"delete",columnGroupShow:"open",headerName:"Delete",width:100,editable:!0,cellRenderer:t=>N.jsx(Me,{data:t}),valueGetter:t=>t.data.delete,hide:!1}]},{field:"erf.erfNo",headerName:"Erf No",width:100,tooltipField:"Erf the ast belong to",hide:!1},{field:"erf.address.ward",headerName:"Ward",width:100},{headerName:"Meter Description",children:[{field:"astData.astNo",headerName:"Meter No",width:170,columnGroupShow:"closed",cellRenderer:t=>N.jsx(O,{data:t,children:t.value}),cellRendererParams:{modalName:"meterReport",width:"8rem",irepsKeyItem:"asts",displayMode:"modal"},hide:!1},{field:"astData.astCatergory",headerName:"Category",columnGroupShow:"closed",width:150,hide:!0},{field:"astData.astManufacturer",headerName:"Manufacturer (Brand)",columnGroupShow:"closed",width:200,hide:!1},{field:"astData.astName",headerName:"Model Name",columnGroupShow:"closed",width:150,hide:!1}]},{field:"",headerName:"Meter Media",width:150,cellRenderer:t=>N.jsx(O,{data:t,children:t.value}),cellRendererParams:{modalName:"mediaMobileAsts",width:"4rem",irepsKeyItem:"asts",displayMode:"modal"},valueGetter:t=>{var e,s,a,n;return(s=(e=t==null?void 0:t.data)==null?void 0:e.media)!=null&&s.length?(n=(a=t==null?void 0:t.data)==null?void 0:a.media)==null?void 0:n.length:0}},{field:"trns",headerName:"Trns On Meter",width:130,cellRenderer:De,cellRendererParams:{columnName:"tidTrn"},hide:!1,valueGetter:t=>t.data,filter:!1},{field:"location.gps",columnGroupShow:"closed",headerName:"Meter on Map",cellRenderer:t=>N.jsx(O,{data:t,children:N.jsx(pe.Provider,{value:{color:"blue",fontSize:"1rem"},children:N.jsx(Ne,{})})}),cellRendererParams:{modalName:"showAstOnMap",width:"3rem"},valueGetter:t=>{var s,a,n,c,i,m;const d=Number((n=(a=(s=t.data)==null?void 0:s.location)==null?void 0:a.gps)==null?void 0:n.lat),e=Number((m=(i=(c=t.data)==null?void 0:c.location)==null?void 0:i.gps)==null?void 0:m.lng);return`${d.toFixed(3)} / ${e.toFixed(3)}`},width:140,filter:!1},{field:"astData.astState.state",headerName:"Meter State",width:250,valueGetter:t=>{var e,s,a,n,c,i,m,l,h,r,o,u,g,y,p,S,b,M,B,U,T,v,A,R,E,j,F,I,$,P;let d="";return((e=t.data)==null?void 0:e.astData.astState.state)==="stores"&&(d=`${(n=(a=(s=t.data)==null?void 0:s.astData)==null?void 0:a.astState)==null?void 0:n.state} : ${(m=(i=(c=t.data)==null?void 0:c.astData)==null?void 0:i.astState)==null?void 0:m.location}`),((l=t.data)==null?void 0:l.astData.astState.state)==="service"&&(d=`service : ${(o=(r=(h=t.data)==null?void 0:h.erf)==null?void 0:r.address)==null?void 0:o.lmMetro} - ${(u=t.data)==null?void 0:u.erf.erfNo}`),((p=(y=(g=t.data)==null?void 0:g.astData)==null?void 0:y.astState)==null?void 0:p.state)==="temper"&&(d=`temper : ${(S=t.data)==null?void 0:S.erf.address.lmMetro} - ${(b=t.data)==null?void 0:b.erf.erfNo}`),(((U=(B=(M=t.data)==null?void 0:M.astData)==null?void 0:B.astState)==null?void 0:U.state)==""||((A=(v=(T=t.data)==null?void 0:T.astData)==null?void 0:v.astState)==null?void 0:A.state)==null||((j=(E=(R=t.data)==null?void 0:R.astData)==null?void 0:E.astState)==null?void 0:j.state)==null)&&(d=`service : ${($=(I=(F=t.data)==null?void 0:F.erf)==null?void 0:I.address)==null?void 0:$.lmMetro} - ${(P=t.data)==null?void 0:P.erf.erfNo}`),d}},{field:"metadata.createdThrough.creatorTrnName",headerName:"Meter Creator",width:140},{headerName:"Meter Specific Data",children:[{field:"astData.meter.type",headerName:"Meter Type",width:150,hide:!1},{field:"astData.meter.phase",headerName:"Meter Phase",width:150,hide:!1}]},{headerName:"Anomalies",children:[{field:"anomalies.anomaly",headerName:"Anomaly",width:200},{field:"anomalies.anomalyDetail",columnGroupShow:"open",headerName:"Anomaly Detail",width:300}]},{headerName:"Meter Location",children:[{field:"location.address",columnGroupShow:"closed",headerName:"Ast Address",width:450},{field:"location.placement",columnGroupShow:"closed",headerName:"Placement",width:190}]},{headerName:"Circuit Breaker (CB)",children:[{field:"astData.meter.cb.size",columnGroupShow:"open",headerName:"CB (Amps)",width:150},{field:"astData.meter.cb.comment",columnGroupShow:"open",headerName:"CB Comment",width:300}]},{headerName:"Seal",children:[{field:"astData.meter.seal.sealNo",columnGroupShow:"open",headerName:"Seal No",width:150},{field:"astData.meter.seal.comment",columnGroupShow:"open",headerName:"Seal Comment",width:300}]},{field:"serviceConnection.configuration",headerName:"Service Connection",width:300},{field:"serviceConnection.offGridSupply",headerName:"Off Grid Supply",width:300},{field:"tid.status",headerName:"Tid Status",width:300},{field:"tid.statusComment",headerName:"Tid Status Comment",width:300}],createExportRowData:t=>(t==null?void 0:t.length)<1?void 0:t&&(t==null?void 0:t.map(e=>{var r,o,u,g,y,p,S,b,M,B,U,T,v,A,R,E,j,F,I,$,P,q,_,z,L,K,W,X,J,Q,V,Y,Z,w;const s=e==null?void 0:e.media,a=e.metadata.createdAtDatetime,n=new H(a==null?void 0:a.seconds,a==null?void 0:a.nanoseconds),c=n==null?void 0:n.toDate(),i=e.metadata.updatedAtDatetime,m=new H(i==null?void 0:i.seconds,i==null?void 0:i.nanoseconds),l=m==null?void 0:m.toDate();return{id:e.id,"Created By":e.metadata.createdByUser,"Created At":te(c,"yy-MM-dd HH:mm"),"Last Updated By":e.metadata.updatedByUser,"Last Updated At Datetime":te(l,"yy-MM-dd HH:mm"),"Meter No":(r=e==null?void 0:e.astData)==null?void 0:r.astNo,"Meter No picture":x(s,"astNo"),"Meter Manufacturer":(o=e==null?void 0:e.astData)==null?void 0:o.astManufacturer,"Meter Name":(u=e==null?void 0:e.astData)==null?void 0:u.astName,"Meter Type":(y=(g=e==null?void 0:e.astData)==null?void 0:g.meter)==null?void 0:y.type,"Meter Phase":(S=(p=e==null?void 0:e.astData)==null?void 0:p.meter)==null?void 0:S.phase,"CB Size":(B=(M=(b=e==null?void 0:e.astData)==null?void 0:b.meter)==null?void 0:M.cb)==null?void 0:B.size,"CB picture":x(s,"cb"),"CB Comment":(v=(T=(U=e==null?void 0:e.astData)==null?void 0:U.meter)==null?void 0:T.cb)==null?void 0:v.comment,"Seal Number":(E=(R=(A=e==null?void 0:e.astData)==null?void 0:A.meter)==null?void 0:R.seal)==null?void 0:E.sealNo,"Seal Number picture":x(s,"seal"),"Seal Comment":(I=(F=(j=e==null?void 0:e.astData)==null?void 0:j.meter)==null?void 0:F.seal)==null?void 0:I.comment,Anomaly:($=e==null?void 0:e.anomalies)==null?void 0:$.anomaly,"Anomaly picture":x(s,"anomaly"),"Anomaly Detail":(P=e==null?void 0:e.anomalies)==null?void 0:P.anomalyDetail,"Erf No":(q=e==null?void 0:e.erf)==null?void 0:q.erfNo,"Street Adr":(_=e==null?void 0:e.erf)==null?void 0:_.street,"Property Type":(L=(z=e==null?void 0:e.erf)==null?void 0:z.propertyType)==null?void 0:L.type,"Unit Name":(W=(K=e==null?void 0:e.erf)==null?void 0:K.propertyType)==null?void 0:W.unitName,"Unit No":(J=(X=e==null?void 0:e.erf)==null?void 0:X.propertyType)==null?void 0:J.unitNo,"Meter Placement":(Q=e==null?void 0:e.location)==null?void 0:Q.placement,"Meter Placement picture":x(s,"insideBox"),"Meter Address":(V=e==null?void 0:e.location)==null?void 0:V.address,"Service Connection Status":(Y=e==null?void 0:e.serviceConnection)==null?void 0:Y.configuration,"Off Grid Supply":(Z=e==null?void 0:e.serviceConnection)==null?void 0:Z.offGridSupply,"Off Grid picture":x(s,"offGridPhoto"),"TID Status":(w=e==null?void 0:e.tidStatus)==null?void 0:w.status,"TID Status picture":x(s,"tidStatus")}})),error:f}};export{ge as a,xe as u};
//# sourceMappingURL=useAsts-CibmSJZ4.js.map
