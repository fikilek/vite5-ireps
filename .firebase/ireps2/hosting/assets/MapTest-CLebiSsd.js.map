{"version":3,"file":"MapTest-CLebiSsd.js","sources":["../../src/pages/map/MapTestWard.jsx","../../src/pages/map/MapTest.jsx"],"sourcesContent":["import { useEffect, useState, useMemo, useCallback, useRef } from \"react\";\r\nimport { useMap, AdvancedMarker, Pin } from \"@vis.gl/react-google-maps\";\r\nimport { db } from \"@/firebaseConfig/fbConfig\";\r\nimport {\r\n\tcollection,\r\n\tlimit,\r\n\tonSnapshot,\r\n\torderBy,\r\n\tquery,\r\n\twhere,\r\n} from \"firebase/firestore\";\r\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n\r\n// cadastral\r\nimport za_kzn_umgungundlovu_mpofana_w1 from \"@/maps/za/za_kzn_umgungundlovu_mpofana_w1.geojson\";\r\n// console.log(`za_kzn_umgungundlovu_mpofana_w1`, za_kzn_umgungundlovu_mpofana_w1);\r\n\r\n// import za_kzn_umgungundlovu_mpofana_w1_cadastral from \"@/maps/za/za_kzn_umgungundlovu_mpofana_w1_cadastral.geojson\";\r\n// console.log(\r\n// \t`za_kzn_umgungundlovu_mpofana_w1_cadastral`,\r\n// \tza_kzn_umgungundlovu_mpofana_w1_cadastral\r\n// );\r\n\r\nconst MapTestWard = () => {\r\n\tconst [erfs, setErfs] = useState();\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\tconst map = useMap();\r\n\t// console.log(`map`, map);\r\n\r\n\tlet colRef = collection(db, \"erfs\");\r\n\t// console.log(`colRef`, colRef);\r\n\r\n\tconst newQuery = useMemo(\r\n\t\t() =>\r\n\t\t\tquery(\r\n\t\t\t\tcolRef,\r\n\t\t\t\twhere(\"address.lmMetro\", \"==\", \"Mpofana LM\"),\r\n\t\t\t\twhere(\"address.ward\", \"==\", \"1\"),\r\n\t\t\t\torderBy(\"metadata.updatedAtDatetime\", \"desc\")\r\n\t\t\t\t// limit(50)\r\n\t\t\t),\r\n\t\t[colRef]\r\n\t);\r\n\r\n\t// console.log(`newQuery`, newQuery);\r\n\r\n\tuseEffect(() => {\r\n\t\tonSnapshot(\r\n\t\t\tnewQuery,\r\n\t\t\t(snapShot) => {\r\n\t\t\t\t// console.log(`snapShot`, snapShot);\r\n\t\t\t\tconst results = [];\r\n\t\t\t\tsnapShot.docs.forEach((doc) => {\r\n\t\t\t\t\tresults.push({ id: doc.id, ...doc.data() });\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(`results`, results);\r\n\t\t\t\tsetErfs(results);\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tconsole.log(`firestore err`, err.message);\r\n\t\t\t}\r\n\t\t);\r\n\t}, []);\r\n\r\n\tmap?.data?.loadGeoJson(\r\n\t\tza_kzn_umgungundlovu_mpofana_w1,\r\n\t\tza_kzn_umgungundlovu_mpofana_w1\r\n\t);\r\n\r\n\t// map?.data?.loadGeoJson(\r\n\t// \tza_kzn_umgungundlovu_mpofana_w1_cadastral,\r\n\t// \tza_kzn_umgungundlovu_mpofana_w1_cadastral\r\n\t// );\r\n\r\n\tmap.data?.setStyle((feature) => {\r\n\t\t// console.log(`feature`, feature);\r\n\r\n\t\treturn {\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeWeight: 0.1,\r\n\t\t\tstrokeColor: \"blue\",\r\n\t\t};\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetWardBoundary().then((data) => {\r\n\t\t\t// console.log(`data`, data);\r\n\r\n\t\t\tlet myBounds = new window.google.maps.LatLngBounds();\r\n\t\t\tdata.features[0].geometry.coordinates[0][0].forEach((latLng) => {\r\n\t\t\t\tmyBounds.extend({ lat: latLng[1], lng: latLng[0] });\r\n\t\t\t});\r\n\r\n\t\t\tmap?.fitBounds(myBounds);\r\n\t\t});\r\n\t}, [map]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ErfMarkers erfs={erfs} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapTestWard;\r\n\r\nconst getWardBoundary = async () => {\r\n\tconst response = await fetch(za_kzn_umgungundlovu_mpofana_w1);\r\n\t// console.log(`response`, response);\r\n\tconst data = await response.json();\r\n\t// console.log(`data`, data);\r\n\treturn data;\r\n};\r\n\r\nconst ErfMarkers = (props) => {\r\n\tconst { erfs } = props;\r\n\r\n\tconst map = useMap();\r\n\tconst [markers, setMarkers] = useState({});\r\n\tconst clusterer = useRef(null);\r\n\r\n\t// Initialize MarkerClusterer, if the map has changed\r\n\tuseEffect(() => {\r\n\t\tif (!map) return;\r\n\t\tif (!clusterer.current) {\r\n\t\t\tclusterer.current = new MarkerClusterer({ map: map });\r\n\t\t}\r\n\t}, [map]);\r\n\r\n\t// Update markers, if the markers array has changed\r\n\tuseEffect(() => {\r\n\t\tclusterer.current?.clearMarkers();\r\n\t\tclusterer.current?.addMarkers(Object.values(markers));\r\n\t}, [markers]);\r\n\r\n\tconst setMarkerRef = (marker, key) => {\r\n\t\tif (marker && markers[key]) return;\r\n\t\tif (!marker && !markers[key]) return;\r\n\r\n\t\tsetMarkers((prev) => {\r\n\t\t\tif (marker) {\r\n\t\t\t\treturn { ...prev, [key]: marker };\r\n\t\t\t} else {\r\n\t\t\t\tconst newMarkers = { ...prev };\r\n\t\t\t\tdelete newMarkers[key];\r\n\t\t\t\treturn newMarkers;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{erfs?.map((erf) => (\r\n\t\t\t\t<AdvancedMarker\r\n\t\t\t\t\tkey={erf.id}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tlat: erf?.address?.gps?.latitude,\r\n\t\t\t\t\t\tlng: erf?.address?.gps?.longitude,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tref={(marker) => setMarkerRef(marker, erf.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Pin\r\n\t\t\t\t\t\tbackground={\"#FBBC04\"}\r\n\t\t\t\t\t\tglyphColor={\"#000\"}\r\n\t\t\t\t\t\tborderColor={\"#000\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</AdvancedMarker>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","// npm imports\nimport {\n\tAPIProvider,\n\tControlPosition,\n\tMap,\n\tMapControl,\n} from \"@vis.gl/react-google-maps\";\n\n// css\nimport \"@/pages/map/MapTest.css\";\n\n// hooks\nimport { useAstsMap } from \"@/hooks/useAstsMap.jsx\";\nimport { useErfs } from \"@/hooks/useErfs.jsx\";\n\n// components\nimport MapTestWard from \"@/pages/map/MapTestWard.jsx\";\n\nconst MapTest = () => {\n\t// console.log(`Map is running`)\n\n\tuseErfs();\n\tconst { asts, astsTableFields, error } = useAstsMap();\n\t// console.log(`asts`, asts);\n\t// console.log(`astsTableFields`, astsTableFields);\n\t// console.log(`error`, error);\n\n\tconst defaultCenter = {\n\t\tlat: -26.541960658447646,\n\t\tlng: 28.338629116440828,\n\t};\n\n\treturn (\n\t\t<div className=\"map-test\">\n\t\t\t<APIProvider\n\t\t\t\t// version=\"beta\"\n\t\t\t\tapiKey={import.meta.env.VITE_APP_GOOGLE_MAPS_API_KEY}\n\t\t\t\t// onLoad={\"iREPS map has loaded\"}\n\t\t\t\tonLoad={() => console.log(\"Maps API has loaded.\")}\n\t\t\t\tonError={() => console.log(\"There was an error on iREPS Map\")}\n\t\t\t>\n\t\t\t\t<Map\n\t\t\t\t\tdefaultZoom={13}\n\t\t\t\t\tdefaultCenter={{ lat: -33.860664, lng: 151.208138 }}\n\t\t\t\t\tgestureHandling={\"greedy\"}\n\t\t\t\t\tdisableDefaultUI={false}\n\t\t\t\t\tmapId={import.meta.env.VITE_APP_GOOGLE_MAP_ID}\n\t\t\t\t\t// onCenterChanged={onCenterChanged}\n\t\t\t\t\t// onBoundsChanged={onBoundsChanged}\n\t\t\t\t\t// TODO: introduce a defaultBounds prop. This should get bounds from the active workbase of the user.\n\t\t\t\t\t// defaultBounds={}\n\t\t\t\t>\n\t\t\t\t\t<MapTestWard />\n\t\t\t\t</Map>\n\t\t\t</APIProvider>\n\t\t</div>\n\t);\n};\n\nexport default MapTest;\n"],"names":["MapTestWard","erfs","setErfs","useState","map","useMap","colRef","collection","db","newQuery","useMemo","query","where","orderBy","useEffect","onSnapshot","snapShot","results","doc","err","_a","za_kzn_umgungundlovu_mpofana_w1","_b","feature","getWardBoundary","data","myBounds","latLng","jsx","ErfMarkers","props","markers","setMarkers","clusterer","useRef","MarkerClusterer","setMarkerRef","marker","key","prev","newMarkers","Fragment","erf","AdvancedMarker","_d","_c","Pin","MapTest","useErfs","useAstsMap","APIProvider","Map"],"mappings":"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"}