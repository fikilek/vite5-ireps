{"version":3,"file":"Trns-CGp-Pp_O.js","sources":["../../src/hooks/useGetTrnsReport.jsx","../../src/components/filters/FilterTrnType.jsx","../../src/components/filters/FilterTrnAccess.jsx","../../src/components/filters/FiltersTrns.jsx","../../src/components/trns/TrnsHeader.jsx","../../src/components/tables/TableTrns.jsx","../../src/components/trns/TrnsTable.jsx","../../src/components/reports/ReportHeadingTrn.jsx","../../src/components/stats/StatsCombo50_50.jsx","../../src/components/stats/StatsComboTableTrnTypes.jsx","../../src/components/stats/StatsComboBarChartTrnTypes.jsx","../../src/components/reports/ReportTrnTypes.jsx","../../src/components/stats/StatsComboTableTrnPerUser.jsx","../../src/components/reports/ReportTrnTypesPerUser.jsx","../../src/components/trns/TrnsMain.jsx","../../src/pages/trns/Trns.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport {\n\tcollection,\n\tonSnapshot,\n\torderBy,\n\twhere,\n\tquery,\n\tor,\n} from \"firebase/firestore\";\n\n// hooks\nimport useAuthContext from \"@/hooks/useAuthContext\";\nimport { useFirestore_ } from \"@/hooks/useFirestore_\";\nimport { useTrnsStats } from \"@/hooks/useTrnsStats.jsx\";\n\n// contexts\nimport { TrnsContext } from \"@/contexts/TrnsContext\";\nimport { TrnsStatsContext } from \"@/contexts/TrnsStatsContext\";\n\n// components\nimport { db } from \"@/firebaseConfig/fbConfig\";\n\nfunction getRandomColor() {\n\tvar letters = \"0123456789ABCDEF\";\n\tvar color = \"#\";\n\tfor (var i = 0; i < 6; i++) {\n\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t}\n\treturn color;\n}\n\nconst useGetTrnsReport = (fbCollection) => {\n\t// console.log(`fbCollection`, fbCollection);\n\t// console.log(`constraints_`, constraints_);\n\n\tconst { trnsContext, setTrnsContext } = useContext(TrnsContext);\n\t// console.log(`trnsContext`, trnsContext);\n\n\tconst { trnsStatsContext, setTrnsStatsContext } =\n\t\tuseContext(TrnsStatsContext);\n\t// console.log(`trnsStatsContext`, trnsStatsContext);\n\n\tconst [workbase, setWorkbase] = useState([]);\n\t// console.log(`workbase`, workbase);\n\n\tconst [error, setError] = useState(\"\");\n\t// console.log(`error`, error);\n\n\tconst { getDocument } = useFirestore_(\"users\");\n\n\tconst { user } = useAuthContext();\n\t// console.log(`user`, user);\n\n\tconst { getTrnTypesStats, getTrnTypePerUserStats } = useTrnsStats();\n\n\tconst { uid } = user;\n\t// console.log(`uid`, uid);\n\n\tuseEffect(() => {\n\t\tgetDocument(uid).then((userData) => {\n\t\t\t// console.log(`userData`, userData);\n\n\t\t\tconst { workbase } = userData?.doc;\n\t\t\t// console.log(`workbase`, workbase);\n\n\t\t\tsetWorkbase(workbase);\n\n\t\t\tsetError(\"\");\n\t\t});\n\t}, []);\n\n\tconst getTrns = (constraints) => {\n\t\tconsole.log(`constraints`, constraints);\n\n\t\tlet constraints_ = where(\"erf.address.lmMetro\", \"==\", workbase);\n\n\t\tif (constraints) {\n\t\t\tconstraints_ = [constraints_, ...constraints];\n\t\t} else {\n\t\t\tconstraints_ = [\n\t\t\t\tor(constraints_, where(\"astData.trnstate.state\", \"==\", \"stores\")),\n\t\t\t];\n\t\t}\n\n\t\t// console.log(`constraints_`, constraints_);\n\n\t\tconst q = query(\n\t\t\tcollection(db, fbCollection),\n\t\t\t...constraints_,\n\t\t\torderBy(\"metadata.updatedAtDatetime\", \"desc\")\n\t\t);\n\n\t\tsetError(\"\");\n\n\t\tonSnapshot(\n\t\t\tq,\n\t\t\t(snapShot) => {\n\t\t\t\tconst results = [];\n\t\t\t\tsnapShot.docs.forEach((doc) => {\n\t\t\t\t\tresults.push({ id: doc.id, ...doc.data() });\n\t\t\t\t});\n\n\t\t\t\t// results.splice(10);\n\t\t\t\t// console.log(`results`, results);\n\n\t\t\t\t// users stats\n\t\t\t\tconst statsTrnType = getTrnTypesStats(results);\n\n\t\t\t\t// audits pre-paid and conventional\n\t\t\t\tconst trnTypePerUserStats = getTrnTypePerUserStats(results);\n\n\t\t\t\tconst stats = {};\n\t\t\t\tresults?.forEach((ast) => {\n\t\t\t\t\tstats[ast.metadata.createdByUid] =\n\t\t\t\t\t\t1 + (stats[ast.metadata.createdByUid] || 0);\n\t\t\t\t});\n\n\t\t\t\tconst updatedStats = [];\n\t\t\t\tfor (const uid in stats) {\n\t\t\t\t\t// console.log(`${uid}: ${object[property]}`);\n\t\t\t\t\tconst matchingAst = results.find((ast) => {\n\t\t\t\t\t\treturn ast?.metadata?.createdByUid === uid;\n\t\t\t\t\t});\n\n\t\t\t\t\tconst percentage = ((stats[uid] / results?.length) * 100).toFixed(2);\n\n\t\t\t\t\tupdatedStats.push({\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\tdisplayName: matchingAst?.metadata?.createdByUser,\n\t\t\t\t\t\tquantity: stats[uid],\n\t\t\t\t\t\tpercentage: percentage,\n\t\t\t\t\t\tfillColor: getRandomColor(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsetTrnsContext({\n\t\t\t\t\t...trnsContext,\n\t\t\t\t\ttrns: results,\n\t\t\t\t\tstatsCreatedAtDatetimeByUser: updatedStats,\n\t\t\t\t\tnewTrnsData: true,\n\t\t\t\t});\n\n\t\t\t\tsetTrnsStatsContext((prev) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tstatsTrnType,\n\t\t\t\t\t\ttrnTypePerUserStats,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tconsole.log(`firestore err`, err.message);\n\t\t\t\tsetError(err.message);\n\t\t\t}\n\t\t);\n\t};\n\n\treturn { error, getTrns };\n};\n\nexport default useGetTrnsReport;\n","import { useContext } from \"react\";\n\nimport \"@/components/filters/FilterTrnType.css\";\n\n// contexts\nimport { FiltersContext } from \"@/contexts/FiltersContext\";\nimport { TrnsContext } from \"@/contexts/TrnsContext\";\n\nconst FilterTrnType = () => {\n\tconst { filtersContext, setFiltersContext } = useContext(FiltersContext);\n\t// console.log(`filtersContext`, filtersContext);\n\n\tconst { trnsContext, setTrnsContext } = useContext(TrnsContext);\n\t// console.log(`trnsContext`, trnsContext);\n\n\tconst { trnType } = filtersContext?.filterCondition;\n\t// console.log(`trnType`, trnType);\n\n\tconst selected = trnType ? false : true;\n\n\tconst handleChange = (e) => {\n\t\t// console.log(`e.currentTarget.value`, e.currentTarget.value);\n\n\t\tsetFiltersContext({\n\t\t\t...filtersContext,\n\t\t\tfilterCondition: {\n\t\t\t\t...filtersContext.filterCondition,\n\t\t\t\ttrnType: e.currentTarget.value,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"filter-trn-type\">\n\t\t\t<select className=\"ftt-select\" onChange={handleChange}>\n\t\t\t\t<option selected={selected} value=\"\">\n\t\t\t\t\tSelect Filter\n\t\t\t\t</option>\n\t\t\t\t<option value=\"audit\">Audits</option>\n\t\t\t\t<option value=\"tid\">Tid</option>\n\t\t\t\t<option value=\"installation\">Installations</option>\n\t\t\t\t<option value=\"inspection\">Inspections</option>\n\t\t\t\t<option value=\"disconnection\">Disconnections</option>\n\t\t\t\t<option value=\"reconnection\">Reconnections</option>\n\t\t\t\t<option value=\"decommissioning\">Decommissioning</option>\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nexport default FilterTrnType;\n","import { useContext } from \"react\";\n\nimport \"@/components/filters/FilterTrnAccess.css\";\n\n// contexts\nimport { FiltersContext } from \"@/contexts/FiltersContext\";\nimport { TrnsContext } from \"@/contexts/TrnsContext\";\n\nconst FilterTrnAccess = () => {\n\tconst { filtersContext, setFiltersContext } = useContext(FiltersContext);\n\t// console.log(`filtersContext`, filtersContext);\n\n\tconst { trnsContext, setTrnsContext } = useContext(TrnsContext);\n\t// console.log(`trnsContext`, trnsContext);\n\n\tconst { trnAccess } = filtersContext?.filterCondition;\n\t// console.log(`trnAccess`, trnAccess);\n\n\tconst selected = trnAccess ? false : true;\n\n\tconst handleChange = (e) => {\n\t\t// console.log(`e.currentTarget.value`, e.currentTarget.value);\n\n\t\tsetFiltersContext({\n\t\t\t...filtersContext,\n\t\t\tfilterCondition: {\n\t\t\t\t...filtersContext.filterCondition,\n\t\t\t\ttrnAccess: e.currentTarget.value,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"filter-trn-access\">\n\t\t\t<select className=\"fta-select\" onChange={handleChange}>\n\t\t\t\t<option selected={selected} value=\"\">\n\t\t\t\t\tSelect Filter\n\t\t\t\t</option>\n\t\t\t\t<option value=\"yes\">Yes</option>\n\t\t\t\t<option value=\"no\">No</option>\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nexport default FilterTrnAccess;\n","import { useState } from \"react\";\n\n// css\nimport \"@/components/filters/FiltersTrns.css\";\n\n// hooks\nimport useGetTrnsReport from \"@/hooks/useGetTrnsReport\";\n\n// context\n\n// components\nimport FiltersHeader from \"@/components/filters/FiltersHeader\";\nimport FilterItem from \"@/components/filters/FilterItem\";\nimport FiltersControlBtns from \"@/components/filters/FiltersControlBtns\";\nimport FilterReportTypeBtn from \"@/components/filters/FilterReportTypeBtn\";\nimport FilterCreatedAtDatetime from \"@/components/filters/FilterCreatedAtDatetime\";\nimport FilterUpdatedAtDatetime from \"@/components/filters/FilterUpdatedAtDatetime\";\nimport FilterTrnType from \"@/components/filters/FilterTrnType\";\nimport FilterTrnAccess from \"@/components/filters/FilterTrnAccess\";\n\nconst FiltersTrns = (props) => {\n\tconst { irepsKeyItem } = props;\n\tconst [active, setActive] = useState(\"reportFilters\");\n\n\tconst { getTrns } = useGetTrnsReport(\"trns\");\n\n\treturn (\n\t\t<div className=\"filters-trns\">\n\t\t\t<FiltersHeader\n\t\t\t\tactive={active}\n\t\t\t\tsetActive={setActive}\n\t\t\t\tirepsKeyItem={irepsKeyItem}\n\t\t\t/>\n\t\t\t<div className=\"filters-body\">\n\t\t\t\t{active === \"reportFilters\" ? (\n\t\t\t\t\t<div className=\"filter-data-filter\">\n\t\t\t\t\t\t<div className=\"filter-items\">\n\t\t\t\t\t\t\t<FilterItem\n\t\t\t\t\t\t\t\ttitle=\"CreatedAtDatetime\"\n\t\t\t\t\t\t\t\tname=\"dateRange\"\n\t\t\t\t\t\t\t\tvalue=\"created\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FilterCreatedAtDatetime />\n\t\t\t\t\t\t\t</FilterItem>\n\t\t\t\t\t\t\t<FilterItem\n\t\t\t\t\t\t\t\ttitle=\"UpdatedAtDatetime\"\n\t\t\t\t\t\t\t\tname=\"dateRange\"\n\t\t\t\t\t\t\t\tvalue=\"updated\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FilterUpdatedAtDatetime />\n\t\t\t\t\t\t\t</FilterItem>\n\t\t\t\t\t\t\t<FilterItem\n\t\t\t\t\t\t\t\ttitle=\"TrnType (audit, tid, etc)\"\n\t\t\t\t\t\t\t\tname=\"trnType\"\n\t\t\t\t\t\t\t\tvalue=\"trnType\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FilterTrnType />\n\t\t\t\t\t\t\t</FilterItem>\n\n\t\t\t\t\t\t\t<FilterItem\n\t\t\t\t\t\t\t\ttitle=\"Access/No Access \"\n\t\t\t\t\t\t\t\tname=\"trnAccess\"\n\t\t\t\t\t\t\t\tvalue=\"trnAccess\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FilterTrnAccess />\n\t\t\t\t\t\t\t</FilterItem>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FiltersControlBtns getData={getTrns} />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t\t{active === \"reportStats\" ? (\n\t\t\t\t\t<div className=\"filter-reports\">\n\t\t\t\t\t\t<div className=\"filter-report-body\">\n\t\t\t\t\t\t\t<FilterReportTypeBtn title=\"Trn Types Stats\" name=\"trnTypes\" />\n\t\t\t\t\t\t\t<FilterReportTypeBtn\n\t\t\t\t\t\t\t\ttitle=\"Trn Types Per Users Stats\"\n\t\t\t\t\t\t\t\tname=\"trnTypesPerUser\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FiltersTrns;\n","// npm library\nimport * as XLSX from \"xlsx/xlsx.mjs\";\n\n// css\nimport \"@/components/trns/TrnsHeader.css\";\n\n// hooks\nimport useAuthContext from \"@/hooks/useAuthContext\";\nimport { useUser } from \"@/hooks/useUser\";\nimport { useTrns } from \"@/hooks/useTrns\";\n\n// components\nimport PageTitle from \"@/pages/PageTitle\";\nimport FilterBtn from \"@/components/filters/FilterBtn\";\n\nconst TrnsHeader = (props) => {\n\t// console.log(`props`, props);\n\tconst { phLl, phL2, phl3, trnsContext, setTrnsContext, tableRef } = props;\n\n\tconst { user } = useAuthContext();\n\t// console.log(`user`, user);\n\n\tconst { createExportRowData } = useTrns();\n\n\tconst onPrint = (e) => {\n\t\t// console.log(`e`, e);\n\t\t// console.log(`tableRef.current`, tableRef.current);\n\n\t\tconst { rowData } = tableRef?.current?.props;\n\t\t// console.log(`rowData`, rowData);\n\n\t\tconst exportRowData = createExportRowData(rowData);\n\t\t// console.log(`exportRowData`, exportRowData);\n\n\t\t// tableRef.current.api.exportDataAsCsv();\n\n\t\t// Extract Data (create a workbook object from the table)\n\t\tconst wb = XLSX.utils.book_new();\n\t\tconst ws = XLSX.utils.json_to_sheet(exportRowData);\n\t\t// console.log(`ws`, ws);\n\n\t\t// // get and array from ws\n\t\t// const wsArray = Object.entries(ws);\n\t\t// console.log(`wsArray`, wsArray);\n\n\t\t// for (const property in ws) {\n\t\t// \tconsole.log(`Property BEFORE : `, property);\n\t\t// \tconst after = property.replace(/[^A-Za-z]/g, \"\");\n\t\t// \tconsole.log(`Property AFTER : `, after);\n\n\t\t// \tws[`${property}`].l = {\n\t\t// \t\tTarget: \"https://sheetjs.com\",\n\t\t// \t\t// Tooltip: \"Find us @ SheetJS.com!\",\n\t\t// \t};\n\n\t\t// \tconsole.log(ws[property]);\n\t\t// }\n\n\t\t// for (let i = 1; i < wsArray.length + 1; i++) {\n\t\t// \tconsole.log(`Row :`, i);\n\n\t\t// \tconsole.log(`rowData[${i}]`, rowData[i]);\n\t\t// \tws[\n\t\t// \t\tXLSX.utils.encode_cell({\n\t\t// \t\t\tc: 1,\n\t\t// \t\t\tr: i,\n\t\t// \t\t})\n\t\t// \t].l = { Target: \"https://google.com\" };\n\t\t// }\n\n\t\t// Process Data (add a new row)\n\t\tXLSX.utils.book_append_sheet(wb, ws, \"trns\");\n\n\t\t// Package and Release Data (`writeFile` tries to write and save an XLSB file)\n\t\tXLSX.writeFile(wb, \"Trns_Report.xlsx\");\n\t};\n\n\tconst { userFromUsers } = useUser(user.uid);\n\t// console.log(`userFromUsers`, userFromUsers);\n\treturn (\n\t\t<div className=\"trns-header\">\n\t\t\t<div className=\"ph ph-left\">\n\t\t\t\t<div className=\"phLl\">\n\t\t\t\t\t<FilterBtn context={trnsContext} setContext={setTrnsContext} />\n\t\t\t\t\t<PageTitle title={phLl} />\n\t\t\t\t\t{/* <PageTitle title={phL2} /> */}\n\t\t\t\t\t<PageTitle title={userFromUsers.workbase} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"phLr\"></div>\n\t\t\t</div>\n\n\t\t\t<div className=\"ph ph-right\">\n\t\t\t\t<div className=\"phRl\"></div>\n\t\t\t\t<div className=\"phRr\">\n\t\t\t\t\t<button className=\"export-btn\" onClick={onPrint}>\n\t\t\t\t\t\tExport\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TrnsHeader;\n","import { useMemo, useRef } from \"react\";\r\nimport useAuthContext from \"@/hooks/useAuthContext\";\r\n\r\nimport \"@/components/tables/Table.css\";\r\nimport \"@/components/tables/TableTrns.css\";\r\n\r\nimport { TableCustomNoRowsOverlay } from \"@/components/tables/TableCustomNoRowsOverlay\";\r\n\r\n// ag grid\r\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\r\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport \"@ag-grid-community/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n\r\nconst TableTrns = (props) => {\r\n\t// console.log(`props`, props)\r\n\tconst { rowData, colDefs, tableRef } = props;\r\n\r\n\tconst gridApiRef = useRef();\r\n\r\n\tconst { user } = useAuthContext();\r\n\t// console.log(`user`, user);\r\n\r\n\t// const { fieldworker, guest } = user?.claims;\r\n\r\n\tconst email = user?.email;\r\n\t// console.log(`email`, email);\r\n\r\n\tconst displayName = user?.displayName;\r\n\t// console.log(`displayName`, displayName);\r\n\r\n\tconst defaultColDef = useMemo(\r\n\t\t() => ({\r\n\t\t\tsortable: true,\r\n\t\t\tfilter: true,\r\n\t\t\tresizable: true,\r\n\t\t\tfloatingFilter: true,\r\n\t\t\tsuppressMovable: true,\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst getRowId = (params) => {\r\n\t\t// console.log(`params`, params);\r\n\t\treturn params.data.id;\r\n\t};\r\n\r\n\tconst onGridReady = async (params) => {\r\n\t\t// console.log(`params`, params);\r\n\t\tgridApiRef.current = params.api; // <= assigned gridApi value on Grid ready\r\n\t\t// console.log(`gridApiRef.current`, gridApiRef.current);\r\n\t};\r\n\r\n\tconst onFirstDataRendered = () => {\r\n\t\t// const filterModel = gridApiRef.current.getFilterModel(\"metadata.updatedByUser\");\r\n\t\t// console.log(`filterModel`, filterModel);\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\temail === \"fikilekentane@gmail.com\" ||\r\n\t\t\t\temail === \"zamo@rsteutilities.com\" ||\r\n\t\t\t\temail === \"sbu@isandisoipe.co.za\"\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tgridApiRef.current.setColumnFilterModel(\"metadata.createdByUser\", {\r\n\t\t\t\tfilterType: \"text\",\r\n\t\t\t\ttype: \"contains\",\r\n\t\t\t\tfilter: displayName,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// const Model = gridApiRef.current.getFilterModel(\"metadata.updatedByUser\");\r\n\t\t// console.log(`Model before`, Model);\r\n\r\n\t\tgridApiRef.current.onFilterChanged();\r\n\t\t// console.log(`Model after`, Model);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"ag-theme-quartz table table-trns\">\r\n\t\t\t<AgGridReact\r\n\t\t\t\trowData={rowData}\r\n\t\t\t\tcolumnDefs={colDefs}\r\n\t\t\t\tdefaultColDef={defaultColDef}\r\n\t\t\t\tpagination={true}\r\n\t\t\t\tnoRowsOverlayComponent={TableCustomNoRowsOverlay}\r\n\t\t\t\tgetRowId={getRowId}\r\n\t\t\t\treactiveCustomComponents\r\n\t\t\t\tonGridReady={onGridReady}\r\n\t\t\t\tonFirstDataRendered={onFirstDataRendered}\r\n\t\t\t\tref={tableRef}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableTrns;\r\n","// css\nimport \"@/components/trns/TrnsTable.css\";\n\n// hooks\n\n// contexts\n\n// components\nimport TableTrns from \"@/components/tables/TableTrns\";\n// import { TrnsContext } from \"@/contexts/TrnsContext\";\n\nconst TrnsTable = (props) => {\n\t// console.log(`props`, props);\n\n\tconst { trns, trnsTableFields, tableRef } = props;\n\t// console.log(`trnsTableFields`, trnsTableFields);\n\n\tconst colDefs = trnsTableFields?.[\"all\"]?.[\"all\"];\n\n\treturn (\n\t\t<div className=\"trns-table table\">\n\t\t\t<TableTrns rowData={trns} colDefs={colDefs} tableRef={tableRef} />\n\t\t</div>\n\t);\n};\n\nexport default TrnsTable;\n","// npm\n// import { useContext } from \"react\";\n// import { format } from \"date-fns\";\n// import { cloneDeep } from \"lodash\";\n\n// css\nimport \"@/components/reports/ReportHeadingTrn.css\";\n\n// contexts\n// import { FiltersContext } from \"@/contexts/FiltersContext\";\n// import { AstsContext } from \"@/contexts/AstsContext\";\n\n// import { constants } from \"@/utils/utils\";\n\nconst ReportHeadingTrn = (props) => {\n\t// console.log(`props`, props);\n\n\tconst total = props?.stats?.total;\n\n\tconst { title } = props;\n\n\tconst rhll = title;\n\tconst rhlr = \" \";\n\tconst rhrl = \" \";\n\tconst rhrr = `Total: ${total}`;\n\treturn (\n\t\t<div className=\"report-heading\">\n\t\t\t<div className=\"rh rh-left\">\n\t\t\t\t<p className=\"rhl rh-element rhll\">{rhll}</p>\n\t\t\t\t<p className=\"rhl rh-element rhlr\">{rhlr}</p>\n\t\t\t</div>\n\t\t\t<div className=\"rh rh-right\">\n\t\t\t\t<p className=\"rhr rh-element rhrl\">{rhrl} </p>\n\t\t\t\t<p className=\"rhr rh-element rhrr\">{rhrr}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ReportHeadingTrn;\n","import \"@/components/stats/StatsCombo50_50.css\";\n\nimport StatsCard from \"@/components/stats/StatsCard\";\n\nconst StatsCombo50_50 = (props) => {\n\tconst { children } = props;\n\n\treturn <div className=\"stats-combo-50-50\">{children}</div>;\n};\n\nexport default StatsCombo50_50;\n","// npm libraries\n// import { useContext } from \"react\";\n\nimport \"@/components/stats/StatsComboTableTrnTypes.css\";\n\n// contexts\n// import { FiltersContext } from \"@/contexts/FiltersContext\";\n// import { AstsStatsContext } from \"@/contexts/AstsStatsContext\";\nimport { capitalizeInitialsString } from \"@/utils/utils\";\n\n// components\nimport TableComboData from \"@/components/tables/TableComboData\";\n\nconst StatsComboTableTrnTypes = (props) => {\n\t// Get trn types from the astsStatsContext\n\tconst { stats, tableRef } = props;\n\t// console.log(`stats`, stats);\n\n\tlet columnDefinitions = [\n\t\t{\n\t\t\tfield: \"trntype\",\n\t\t\t// width: \"150\",\n\t\t\theaderName: \"Trn Type\",\n\t\t\tflex: 4,\n\t\t},\n\t\t{\n\t\t\tfield: \"quantity\",\n\t\t\t// width: \"150\",\n\t\t\t// headerName: \"\",\n\t\t\tflex: 3,\n\t\t},\n\t\t{\n\t\t\tfield: \"percentage\",\n\t\t\t// width: \"150\",\n\t\t\t// headerName: \"\",\n\t\t\tflex: 3,\n\t\t\tvalueFormatter: (params) => `${params.value}%`,\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"stats-combo-table-trn-type\">\n\t\t\t<TableComboData\n\t\t\t\trowData={stats}\n\t\t\t\tcolDefs={columnDefinitions}\n\t\t\t\ttableRef={tableRef}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default StatsComboTableTrnTypes;\n","import { AgCharts } from \"ag-charts-react\";\n\nimport \"@/components/stats/StatsComboBarChartTrnTypes.css\";\n\nconst StatsComboBarChartTrnTypes = (props) => {\n\t// console.log(`props`, props);\n\n\t// get stats from props\n\tconst { stats, barChartSeries } = props?.stats;\n\n\tconst options = {\n\t\ttitle: {\n\t\t\ttext: \"Trn Types\",\n\t\t},\n\t\tsubtitle: {\n\t\t\ttext: \"Transaction Types\",\n\t\t},\n\t\tdata: stats,\n\t\tseries: barChartSeries,\n\t};\n\n\treturn (\n\t\t<div className=\"stats-combo-bar-chart\">\n\t\t\t<AgCharts options={options} />\n\t\t</div>\n\t);\n};\n\nexport default StatsComboBarChartTrnTypes;\n","// npm libraries\nimport { useContext, useRef } from \"react\";\n\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport \"@ag-grid-community/styles/ag-grid.css\";\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport { CsvExportModule } from \"@ag-grid-community/csv-export\";\n\nModuleRegistry.registerModules([ClientSideRowModelModule]);\nModuleRegistry.registerModules([CsvExportModule]);\n\nimport \"@/components/reports/ReportTrnTypes.css\";\n\n// contexts\nimport { TrnsStatsContext } from \"@/contexts/TrnsStatsContext\";\n\nimport ReportHeadingTrn from \"@/components/reports/ReportHeadingTrn\";\nimport StatsCombo50_50 from \"@/components/stats/StatsCombo50_50\";\n// import StatsComboPieChart from \"@/components/stats/StatsComboPieChart\";\nimport StatsCard from \"@/components/stats/StatsCard\";\nimport StatsComboTableTrnTypes from \"@/components/stats/StatsComboTableTrnTypes\";\nimport StatsComboBarChartTrnTypes from \"@/components/stats/StatsComboBarChartTrnTypes\";\n\nimport { capitalizeInitialsString } from \"@/utils/utils\";\n\nconst ReportTrnTypes = () => {\n\tconst { trnsStatsContext } = useContext(TrnsStatsContext);\n\t// console.log(`trnsStatsContext`, trnsStatsContext);\n\n\tconst tableRef = useRef();\n\n\tconst { statsTrnType } = trnsStatsContext;\n\t// console.log(`trnTypePerUserStats`, trnTypePerUserStats);\n\t// console.log(`statsTrnType`, statsTrnType);\n\n\tconst stats = statsTrnType?.stats;\n\n\tconst barChartSeries = [\n\t\t{ type: \"bar\", xKey: \"trntype\", yKey: \"quantity\", yName: \"Trn Type\" },\n\t];\n\n\t// console.log(`barChartSeries`, barChartSeries);\n\t// console.log(`trnTypeData`, trnTypeData);\n\n\tconst statsData = {\n\t\tstats: statsTrnType?.stats,\n\t\ttotal: statsTrnType?.total,\n\t\tbarChartSeries,\n\t};\n\n\tconst statsName = \"Trn Type Summary\";\n\n\tconst handleClick = (e) => {\n\t\t// console.log(`export btn clicked`, e.target.value);\n\t\t// console.log(`tableRef`, tableRef);\n\t\ttableRef.current?.api?.exportDataAsCsv();\n\t};\n\n\tconst headerDataGeneric = {\n\t\thl1: \"hl1\",\n\t\thl2: \"\",\n\t\thr1: \" \",\n\t\thr2: (\n\t\t\t<>\n\t\t\t\t<button onClick={handleClick} className=\"stats-btn stats-btn-export\">\n\t\t\t\t\tExport\n\t\t\t\t</button>{\" \"}\n\t\t\t\t<button className=\"stats-btn stats-btn-pdf\">Pdf</button>\n\t\t\t</>\n\t\t),\n\t};\n\n\treturn (\n\t\t<div className={`report-trn-types`}>\n\t\t\t<ReportHeadingTrn title=\"Trn Type Stats\" stats={statsData} />\n\t\t\t<div className=\"rtt-body\">\n\t\t\t\t<StatsCombo50_50 statsName=\"Trn Types\">\n\t\t\t\t\t<StatsCard\n\t\t\t\t\t\tstatsName={`${statsName}`}\n\t\t\t\t\t\tstats={statsData}\n\t\t\t\t\t\theaderData={headerDataGeneric}\n\t\t\t\t\t\ttableRef={tableRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StatsComboTableTrnTypes stats={stats} tableRef={tableRef} />\n\t\t\t\t\t</StatsCard>\n\n\t\t\t\t\t<StatsCard\n\t\t\t\t\t\tstatsName={`${statsName}`}\n\t\t\t\t\t\tstats={statsData}\n\t\t\t\t\t\theaderData={headerDataGeneric}\n\t\t\t\t\t\ttableRef={tableRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StatsComboBarChartTrnTypes stats={statsData} />\n\t\t\t\t\t</StatsCard>\n\t\t\t\t</StatsCombo50_50>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ReportTrnTypes;\n","// npm libraries\n// import { useContext } from \"react\";\n\nimport \"@/components/stats/StatsComboTableTrnPerUser.css\";\n\n// contexts\n// import { FiltersContext } from \"@/contexts/FiltersContext\";\n// import { AstsStatsContext } from \"@/contexts/AstsStatsContext\";\nimport { capitalizeInitialsString } from \"@/utils/utils\";\n\n// components\nimport TableComboData from \"@/components/tables/TableComboData\";\n\nconst StatsComboTableTrnPerUser = (props) => {\n\t// Get asts anomalies from the astsStatsContext\n\tconst { stats, tableRef } = props;\n\t// console.log(`stats`, stats);\n\n\tlet columnDefinitions = [\n\t\t{\n\t\t\tfield: \"trnType\",\n\t\t\theaderName: \"Trn Type Name\",\n\t\t\twidth: \"200\",\n\t\t\t// flex: 0.3,\n\t\t},\n\t];\n\n\tstats?.stats?.forEach((item) => {\n\t\t// console.log(`item`, item);\n\n\t\tconst { usersObj } = item;\n\t\t// console.log(`usersObj`, usersObj);\n\n\t\tfor (const uid in usersObj) {\n\t\t\tconst result = columnDefinitions.some(\n\t\t\t\t(fw) => fw?.valueGetterParam?.uid === uid\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\tcolumnDefinitions.push({\n\t\t\t\t\tfield: `userObj.${uid}.quantity`,\n\t\t\t\t\theaderName: capitalizeInitialsString(usersObj[uid].displayName),\n\t\t\t\t\twidth: \"60\",\n\t\t\t\t\theaderTooltip: usersObj[uid].displayName,\n\t\t\t\t\t// flex: 0.1,\n\t\t\t\t\tvalueGetter: (params) => {\n\t\t\t\t\t\tconst value = params.data?.usersObj[uid]?.quantity;\n\t\t\t\t\t\treturn value ? value : 0;\n\t\t\t\t\t},\n\t\t\t\t\tvalueGetterParam: {\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tcolumnDefinitions.push({\n\t\tfield: \"total\",\n\t\theaderName: \"Total\",\n\t\twidth: \"100\",\n\t\t// flex: 0.1,\n\t\tcellRenderer: (params) => {\n\t\t\t// console.log(`params.value`, params.value);\n\t\t\treturn params.value ? params.value : 0;\n\t\t},\n\t});\n\n\t// console.log(`stats`, stats);\n\t// console.log(`columnDefinitions`, columnDefinitions);\n\n\treturn (\n\t\t<div className=\"stats-combo-table-trn-per-user\">\n\t\t\t<TableComboData\n\t\t\t\trowData={stats?.stats}\n\t\t\t\tcolDefs={columnDefinitions}\n\t\t\t\ttableRef={tableRef}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default StatsComboTableTrnPerUser;\n","// npm libraries\nimport { useContext, useRef } from \"react\";\n\nimport \"@/components/reports/ReportTrnTypesPerUser.css\";\n\n// contexts\nimport { TrnsStatsContext } from \"@/contexts/TrnsStatsContext\";\n\nimport ReportHeadingTrn from \"@/components/reports/ReportHeadingTrn\";\nimport StatsCombo from \"@/components/stats/StatsCombo\";\nimport StatsComboTableTrnPerUser from \"@/components/stats/StatsComboTableTrnPerUser\";\n// import StatsComboBarChartAnomalies from \"@/components/stats/StatsComboBarChartAnomalies\";\n// import StatsComboPieChart from \"@/components/stats/StatsComboPieChart\";\nimport StatsCard from \"@/components/stats/StatsCard\";\n\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport \"@ag-grid-community/styles/ag-grid.css\";\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport { CsvExportModule } from \"@ag-grid-community/csv-export\";\n\nModuleRegistry.registerModules([ClientSideRowModelModule]);\nModuleRegistry.registerModules([CsvExportModule]);\n\nconst ReportTrnTypesPerUser = () => {\n\tconst { trnsStatsContext } = useContext(TrnsStatsContext);\n\t// console.log(`trnsStatsContext`, trnsStatsContext);\n\n\tconst tableRef = useRef();\n\n\tconst { trnTypePerUserStats } = trnsStatsContext;\n\t// console.log(`trnTypePerUserStats`, trnTypePerUserStats);\n\n\tconst handleClick = (e) => {\n\t\t// console.log(`export btn clicked`, e.target.value);\n\t\t// console.log(`tableRef`, tableRef);\n\t\ttableRef.current.api.exportDataAsCsv();\n\t};\n\n\tconst statsName = \"Trn Type Per User\";\n\tconst headerDataGeneric = {\n\t\thl1: \"hl1\",\n\t\thl2: \"\",\n\t\thr1: \" \",\n\t\thr2: (\n\t\t\t<>\n\t\t\t\t<button onClick={handleClick} className=\"stats-btn stats-btn-export\">\n\t\t\t\t\tExport\n\t\t\t\t</button>{\" \"}\n\t\t\t\t<button className=\"stats-btn stats-btn-pdf\">Pdf</button>\n\t\t\t</>\n\t\t),\n\t};\n\n\treturn (\n\t\t<div className={`report-trn-types-per-user`}>\n\t\t\t<ReportHeadingTrn\n\t\t\t\ttitle=\"Trn Type Per User Stats\"\n\t\t\t\tstats={trnTypePerUserStats}\n\t\t\t/>\n\n\t\t\t{/* display main anomalies data */}\n\t\t\t<div className=\"rttpu-body\">\n\t\t\t\t<StatsCombo statsName={statsName}>\n\t\t\t\t\t<StatsCard\n\t\t\t\t\t\tstatsName={statsName}\n\t\t\t\t\t\tstats={trnTypePerUserStats}\n\t\t\t\t\t\theaderData={headerDataGeneric}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StatsComboTableTrnPerUser\n\t\t\t\t\t\t\tstats={trnTypePerUserStats}\n\t\t\t\t\t\t\ttableRef={tableRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StatsCard>\n\n\t\t\t\t\t{/* <StatsCard\n\t\t\t\t\t\tstatsName={`${statsName} Bar Chart`}\n\t\t\t\t\t\tstats={trnTypePerUserStats}\n\t\t\t\t\t\theaderData={headerDataGeneric}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StatsComboBarChartAnomalies stats={trnTypePerUserStats} />\n\t\t\t\t\t</StatsCard> */}\n\t\t\t\t</StatsCombo>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ReportTrnTypesPerUser;\n","// nom libraries\n\n// css\nimport \"@/components/trns/TrnsMain.css\";\n\n// components\nimport TrnsTable from \"@/components/trns/TrnsTable\";\nimport ReportTrnTypes from \"@/components/reports/ReportTrnTypes\";\nimport ReportTrnTypesPerUser from \"@/components/reports/ReportTrnTypesPerUser\";\nimport Report from \"@/components/reports/Report\";\n\nconst TrnsMain = ({ trns, trnsTableFields, tableRef }) => {\n\treturn (\n\t\t<div className=\"trns-main\">\n\t\t\t<TrnsTable\n\t\t\t\ttrns={trns}\n\t\t\t\ttrnsTableFields={trnsTableFields}\n\t\t\t\ttableRef={tableRef}\n\t\t\t/>\n\t\t\t<Report reportName=\"trnTypes\">\n\t\t\t\t<ReportTrnTypes />\n\t\t\t</Report>\n\t\t\t<Report reportName=\"trnTypesPerUser\">\n\t\t\t\t<ReportTrnTypesPerUser />\n\t\t\t</Report>\n\t\t</div>\n\t);\n};\n\nexport default TrnsMain;\n","import { useContext, useRef } from \"react\";\n\n// css\nimport \"@/pages/trns/Trns.css\";\n\n// contexts\nimport { TrnsContext } from \"@/contexts/TrnsContext\";\n\n// hooks\nimport { useTrns } from \"@/hooks/useTrns\";\n\nimport FiltersTrns from \"@/components/filters/FiltersTrns\";\nimport TrnsHeader from \"@/components/trns/TrnsHeader\";\nimport TrnsMain from \"@/components/trns/TrnsMain\";\n\nconst Trns = (props) => {\n\tconst { trnType, astCat } = props;\n\t// console.log(`props`, props)\n\n\tconst tableRef = useRef();\n\n\tconst { trnsTableFields } = useTrns();\n\t// console.log(`trnsTableFields`, trnsTableFields);\n\n\tconst { trnsContext, setTrnsContext } = useContext(TrnsContext);\n\t// console.log(`trnsContext`, trnsContext);\n\n\tconst { trns, filterBtn } = trnsContext;\n\t// console.log(`trns`, trns);\n\n\treturn (\n\t\t<div className=\"trns\">\n\t\t\t<TrnsHeader\n\t\t\t\tphLl=\"Trns\"\n\t\t\t\tphL2={astCat}\n\t\t\t\tphL3={trnType}\n\t\t\t\ttrnsContext={trnsContext}\n\t\t\t\tsetTrnsContext={setTrnsContext}\n\t\t\t\ttableRef={tableRef}\n\t\t\t/>\n\t\t\t<div className=\"trns-body\">\n\t\t\t\t{filterBtn ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FiltersTrns />\n\t\t\t\t\t\t<TrnsMain\n\t\t\t\t\t\t\ttrns={trns}\n\t\t\t\t\t\t\ttrnsTableFields={trnsTableFields}\n\t\t\t\t\t\t\ttableRef={tableRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<TrnsMain\n\t\t\t\t\t\ttrns={trns}\n\t\t\t\t\t\ttrnsTableFields={trnsTableFields}\n\t\t\t\t\t\ttableRef={tableRef}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Trns;\n"],"names":["getRandomColor","letters","color","i","useGetTrnsReport","fbCollection","trnsContext","setTrnsContext","useContext","TrnsContext","trnsStatsContext","setTrnsStatsContext","TrnsStatsContext","workbase","setWorkbase","useState","error","setError","getDocument","useFirestore_","user","useAuthContext","getTrnTypesStats","getTrnTypePerUserStats","useTrnsStats","uid","useEffect","userData","constraints","constraints_","where","or","q","query","collection","db","orderBy","onSnapshot","snapShot","results","doc","statsTrnType","trnTypePerUserStats","stats","ast","updatedStats","matchingAst","_a","percentage","prev","err","FilterTrnType","filtersContext","setFiltersContext","FiltersContext","trnType","selected","handleChange","e","jsx","FilterTrnAccess","trnAccess","FiltersTrns","props","irepsKeyItem","active","setActive","getTrns","jsxs","FiltersHeader","FilterItem","FilterCreatedAtDatetime","FilterUpdatedAtDatetime","FiltersControlBtns","FilterReportTypeBtn","TrnsHeader","phLl","phL2","phl3","tableRef","createExportRowData","useTrns","onPrint","rowData","exportRowData","wb","XLSX.utils","ws","XLSX.writeFile","userFromUsers","useUser","FilterBtn","PageTitle","ModuleRegistry","ClientSideRowModelModule","TableTrns","colDefs","gridApiRef","useRef","email","displayName","defaultColDef","useMemo","getRowId","params","onGridReady","onFirstDataRendered","AgGridReact","TableCustomNoRowsOverlay","TrnsTable","trns","trnsTableFields","ReportHeadingTrn","total","title","rhll","rhlr","rhrl","rhrr","StatsCombo50_50","children","StatsComboTableTrnTypes","columnDefinitions","TableComboData","StatsComboBarChartTrnTypes","barChartSeries","options","AgCharts","CsvExportModule","ReportTrnTypes","statsData","statsName","handleClick","_b","headerDataGeneric","Fragment","StatsCard","StatsComboTableTrnPerUser","item","usersObj","fw","capitalizeInitialsString","value","ReportTrnTypesPerUser","StatsCombo","TrnsMain","Report","Trns","astCat","filterBtn"],"mappings":"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"}